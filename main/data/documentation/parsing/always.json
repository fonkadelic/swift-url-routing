{"metadata":{"modules":[{"name":"Parsing"}],"role":"symbol","externalID":"s:7Parsing6AlwaysV","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Always"}],"navigatorTitle":[{"kind":"identifier","text":"Always"}],"roleHeading":"Structure","symbolKind":"struct","title":"Always"},"abstract":[{"text":"A parser that always succeeds with the given value, and does not consume any input.","type":"text"}],"identifier":{"url":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Always","interfaceLanguage":"swift"},"primaryContentSections":[{"declarations":[{"tokens":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Always"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Input"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"Output"},{"kind":"text","text":">"}],"platforms":["Linux"],"languages":["swift"]}],"kind":"declarations"},{"content":[{"level":2,"type":"heading","anchor":"overview","text":"Overview"},{"type":"paragraph","inlineContent":[{"type":"text","text":"While not very useful on its own, the "},{"type":"codeVoice","code":"Always"},{"type":"text","text":" parser can be helpful when combined with other"},{"type":"text","text":" "},{"type":"text","text":"parsers or operators."}]},{"type":"paragraph","inlineContent":[{"text":"When its ","type":"text"},{"code":"Output","type":"codeVoice"},{"text":" is ","type":"text"},{"code":"Void","type":"codeVoice"},{"text":", it can be used as a “no-op” parser of sorts and be plugged into","type":"text"},{"text":" ","type":"text"},{"text":"other parser operations. For example, the ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Many"},{"text":" parser can be configured with separator and","type":"text"},{"text":" ","type":"text"},{"text":"terminator parsers:","type":"text"}]},{"code":["Many {","  Int.parser()","} separator: {","  \",\"","} terminator: {","  End()","}"],"syntax":"swift","type":"codeListing"},{"inlineContent":[{"text":"But also exposes initializers that omit these parsers when there is no separator or terminator","type":"text"},{"text":" ","type":"text"},{"text":"to be parsed:","type":"text"}],"type":"paragraph"},{"code":["Many {","  Prefix { $0 != \"\\n\" }","  \"\\n\"","}"],"syntax":"swift","type":"codeListing"},{"inlineContent":[{"type":"text","text":"To support this, "},{"type":"codeVoice","code":"Many"},{"type":"text","text":" plugs "},{"type":"codeVoice","code":"Always<Input, Void>"},{"type":"text","text":" into each omitted parser. As a simplified"},{"type":"text","text":" "},{"type":"text","text":"example:"}],"type":"paragraph"},{"code":["struct Many<Element: Parser, Separator: Parser, Terminator: Parser>: Parser","where Separator.Input == Element.Input, Terminator.Input == Element.Input {","  ...","}","","extension Many where Separator == Always<Input, Void>, Terminator == Always<Input, Void> {","  init(@ParserBuilder element: () -> Element) {","    self.element = element()","    self.separator = Always(())","    self.terminator = Always(())","  }","}"],"syntax":"swift","type":"codeListing"},{"inlineContent":[{"text":"This means the previous example is equivalent to:","type":"text"}],"type":"paragraph"},{"code":["Many {","  Prefix { $0 != \"\\n\" }","  \"\\n\"","} separator: {","  Always(())","} terminator: {","  Always(())","}"],"syntax":"swift","type":"codeListing"},{"type":"aside","style":"note","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"While "},{"type":"codeVoice","code":"Always"},{"type":"text","text":" can be used as the last alternative of a "},{"identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/OneOf","type":"reference","isActive":true},{"type":"text","text":" to specify a default"},{"type":"text","text":" "},{"type":"text","text":"output, the resulting parser will be throwing. Instead, prefer "},{"identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Parser\/replaceError(with:)","type":"reference","isActive":true},{"type":"text","text":","},{"type":"text","text":" "},{"type":"text","text":"which returns a non-throwing parser."}]}]}],"kind":"content"}],"topicSections":[{"identifiers":["doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Always\/init(_:)-2spg2","doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Always\/init(_:)-56hez","doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Always\/init(_:)-fdjh"],"title":"Initializers"},{"identifiers":["doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Always\/output"],"title":"Instance Properties"},{"identifiers":["doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Always\/parse(_:)","doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Always\/print(_:into:)"],"title":"Instance Methods"},{"generated":true,"identifiers":["doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Always\/Parser-Implementations","doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Always\/ParserPrinter-Implementations"],"title":"Default Implementations"}],"schemaVersion":{"patch":0,"major":0,"minor":3},"relationshipsSections":[{"identifiers":["doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Parser","doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/ParserPrinter"],"type":"conformsTo","kind":"relationships","title":"Conforms To"}],"hierarchy":{"paths":[["doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing"]]},"sections":[],"kind":"symbol","variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/parsing\/always"]}],"references":{"doc://co.pointfree.URLRouting/documentation/Parsing/Many":{"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Many"}],"kind":"symbol","type":"topic","role":"symbol","url":"\/documentation\/parsing\/many","abstract":[{"type":"text","text":"A parser that attempts to run another parser as many times as specified, accumulating the result"},{"type":"text","text":" "},{"type":"text","text":"of the outputs."}],"identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Many","navigatorTitle":[{"kind":"identifier","text":"Many"}],"title":"Many"},"doc://co.pointfree.URLRouting/documentation/Parsing/ParserPrinter":{"navigatorTitle":[{"text":"ParserPrinter","kind":"identifier"}],"url":"\/documentation\/parsing\/parserprinter","abstract":[{"type":"text","text":"A "},{"isActive":true,"type":"reference","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Parser"},{"type":"text","text":" that can incrementally “print” an output value back into an input."}],"fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"ParserPrinter","kind":"identifier"}],"role":"symbol","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/ParserPrinter","type":"topic","title":"ParserPrinter","kind":"symbol"},"doc://co.pointfree.URLRouting/documentation/Parsing/Always/init(_:)-56hez":{"kind":"symbol","type":"topic","title":"init(_:)","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Always\/init(_:)-56hez","role":"symbol","abstract":[],"fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"Output"},{"kind":"text","text":")"}],"url":"\/documentation\/parsing\/always\/init(_:)-56hez"},"doc://co.pointfree.URLRouting/documentation/Parsing/Always/Parser-Implementations":{"abstract":[],"type":"topic","kind":"article","title":"Parser Implementations","role":"collectionGroup","url":"\/documentation\/parsing\/always\/parser-implementations","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Always\/Parser-Implementations"},"doc://co.pointfree.URLRouting/documentation/Parsing/Always/init(_:)-2spg2":{"type":"topic","conformance":{"constraints":[{"code":"Input","type":"codeVoice"},{"text":" is ","type":"text"},{"code":"Substring","type":"codeVoice"},{"type":"text","text":"."}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}]},"role":"symbol","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"Output"},{"kind":"text","text":")"}],"identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Always\/init(_:)-2spg2","kind":"symbol","abstract":[],"url":"\/documentation\/parsing\/always\/init(_:)-2spg2","title":"init(_:)"},"doc://co.pointfree.URLRouting/documentation/Parsing/Always/output":{"kind":"symbol","type":"topic","title":"output","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Always\/output","role":"symbol","abstract":[],"fragments":[{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"text":"output","kind":"identifier"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Output"}],"url":"\/documentation\/parsing\/always\/output"},"doc://co.pointfree.URLRouting/documentation/Parsing/Always/ParserPrinter-Implementations":{"title":"ParserPrinter Implementations","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Always\/ParserPrinter-Implementations","kind":"article","type":"topic","role":"collectionGroup","abstract":[],"url":"\/documentation\/parsing\/always\/parserprinter-implementations"},"doc://co.pointfree.URLRouting/documentation/Parsing/Always/init(_:)-fdjh":{"kind":"symbol","type":"topic","title":"init(_:)","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Always\/init(_:)-fdjh","role":"symbol","abstract":[],"fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"Output","kind":"typeIdentifier"},{"text":")","kind":"text"}],"url":"\/documentation\/parsing\/always\/init(_:)-fdjh","conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"constraints":[{"code":"Input","type":"codeVoice"},{"text":" is ","type":"text"},{"code":"Substring.UTF8View","type":"codeVoice"},{"text":".","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}]}},"doc://co.pointfree.URLRouting/documentation/Parsing/OneOf":{"title":"OneOf","navigatorTitle":[{"kind":"identifier","text":"OneOf"}],"role":"symbol","url":"\/documentation\/parsing\/oneof","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"OneOf"}],"identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/OneOf","abstract":[{"type":"text","text":"A parser that attempts to run a number of parsers till one succeeds."}],"kind":"symbol","type":"topic"},"doc://co.pointfree.URLRouting/documentation/Parsing/Always/parse(_:)":{"kind":"symbol","type":"topic","title":"parse(_:)","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Always\/parse(_:)","role":"symbol","abstract":[{"text":"Attempts to parse a nebulous piece of data into something more well-structured. Typically","type":"text"},{"text":" ","type":"text"},{"text":"you only call this from other ","type":"text"},{"code":"Parser","type":"codeVoice"},{"text":" conformances, not when you want to parse a concrete","type":"text"},{"text":" ","type":"text"},{"text":"input.","type":"text"}],"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"parse"},{"kind":"text","text":"("},{"kind":"keyword","text":"inout"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Output"}],"url":"\/documentation\/parsing\/always\/parse(_:)"},"doc://co.pointfree.URLRouting/documentation/Parsing/Always":{"kind":"symbol","title":"Always","url":"\/documentation\/parsing\/always","type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Always"}],"navigatorTitle":[{"kind":"identifier","text":"Always"}],"identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Always","abstract":[{"type":"text","text":"A parser that always succeeds with the given value, and does not consume any input."}]},"doc://co.pointfree.URLRouting/documentation/Parsing/Parser/replaceError(with:)":{"kind":"symbol","type":"topic","title":"replaceError(with:)","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Parser\/replaceError(with:)","role":"symbol","abstract":[{"text":"A parser that replaces its error with a provided output.","type":"text"}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"replaceError","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"with"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Output"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Parsers","preciseIdentifier":"s:7Parsing7ParsersO"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"ReplaceError","preciseIdentifier":"s:7Parsing7ParsersO12ReplaceErrorV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":">"}],"url":"\/documentation\/parsing\/parser\/replaceerror(with:)"},"doc://co.pointfree.URLRouting/documentation/Parsing":{"kind":"symbol","abstract":[],"type":"topic","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing","url":"\/documentation\/parsing","role":"collection","title":"Parsing"},"doc://co.pointfree.URLRouting/documentation/Parsing/Always/print(_:into:)":{"kind":"symbol","type":"topic","title":"print(_:into:)","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Always\/print(_:into:)","role":"symbol","abstract":[{"text":"Attempts to print a well-structured piece of data into something more nebulous.","type":"text"}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"print","kind":"identifier"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"Output"},{"kind":"text","text":", "},{"kind":"externalParam","text":"into"},{"kind":"text","text":": "},{"kind":"keyword","text":"inout"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":")"}],"url":"\/documentation\/parsing\/always\/print(_:into:)"},"doc://co.pointfree.URLRouting/documentation/Parsing/Parser":{"kind":"symbol","abstract":[{"text":"Declares a type that can incrementally parse an ","type":"text"},{"code":"Output","type":"codeVoice"},{"text":" value from an ","type":"text"},{"code":"Input","type":"codeVoice"},{"text":" value.","type":"text"}],"type":"topic","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Parser","url":"\/documentation\/parsing\/parser","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Parser","kind":"identifier"}],"role":"symbol","navigatorTitle":[{"text":"Parser","kind":"identifier"}],"title":"Parser"}}}