{"identifier":{"url":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/AnyConversion","interfaceLanguage":"swift"},"metadata":{"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"AnyConversion"}],"roleHeading":"Structure","modules":[{"name":"Parsing"}],"symbolKind":"struct","externalID":"s:7Parsing13AnyConversionV","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"AnyConversion"}],"title":"AnyConversion"},"sections":[],"kind":"symbol","topicSections":[{"identifiers":["doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/AnyConversion\/init(_:)","doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/AnyConversion\/init(apply:unapply:)"],"title":"Initializers"},{"identifiers":["doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/AnyConversion\/apply(_:)","doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/AnyConversion\/unapply(_:)"],"title":"Instance Methods"},{"identifiers":["doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/AnyConversion\/Conversion-Implementations"],"generated":true,"title":"Default Implementations"}],"relationshipsSections":[{"identifiers":["doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Conversion"],"type":"conformsTo","kind":"relationships","title":"Conforms To"}],"schemaVersion":{"major":0,"minor":3,"patch":0},"abstract":[{"type":"text","text":"A type-erased "},{"identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Conversion","type":"reference","isActive":true},{"type":"text","text":"."}],"variants":[{"paths":["\/documentation\/parsing\/anyconversion"],"traits":[{"interfaceLanguage":"swift"}]}],"hierarchy":{"paths":[["doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing"]]},"primaryContentSections":[{"declarations":[{"platforms":["Linux"],"languages":["swift"],"tokens":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"AnyConversion"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Input"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"Output"},{"kind":"text","text":">"}]}],"kind":"declarations"},{"kind":"content","content":[{"anchor":"overview","type":"heading","level":2,"text":"Overview"},{"type":"paragraph","inlineContent":[{"text":"This conversion forwards its ","type":"text"},{"isActive":true,"identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/AnyConversion\/apply(_:)","type":"reference"},{"text":" and ","type":"text"},{"isActive":true,"identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/AnyConversion\/unapply(_:)","type":"reference"},{"text":" methods to an arbitrary","type":"text"},{"text":" ","type":"text"},{"text":"underlying conversion having the same ","type":"text"},{"code":"Input","type":"codeVoice"},{"text":" and ","type":"text"},{"code":"Output","type":"codeVoice"},{"text":" types, hiding the specifics of the","type":"text"},{"text":" ","type":"text"},{"text":"underlying ","type":"text"},{"isActive":true,"identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Conversion","type":"reference"},{"text":".","type":"text"}]},{"type":"paragraph","inlineContent":[{"text":"Use ","type":"text"},{"code":"AnyConversion","type":"codeVoice"},{"text":" to wrap a conversion whose type has details you don’t want to expose across","type":"text"},{"text":" ","type":"text"},{"text":"API boundaries, such as different modules. When you use type erasure this way, you can change","type":"text"},{"text":" ","type":"text"},{"text":"the underlying conversion over time without affecting existing clients.","type":"text"}]},{"type":"paragraph","inlineContent":[{"code":"AnyConversion","type":"codeVoice"},{"text":" can also be useful for experimenting with ad hoc conversions in a lightweight","type":"text"},{"text":" ","type":"text"},{"text":"manner. One can avoid the upfront ceremony of defining a whole new type and instead create a","type":"text"},{"text":" ","type":"text"},{"text":"“conformance” inline by specifying the ","type":"text"},{"code":"apply","type":"codeVoice"},{"text":" and ","type":"text"},{"code":"unapply","type":"codeVoice"},{"text":" functions directly","type":"text"}]},{"code":["Prefix { $0.isNumber }","  .map(","    AnyConversion(","      apply: { Int(String($0)) },","      unapply: { String($0)[...] {","    )","  )","","\/\/ vs.","","struct SubstringToInt: Conversion {","  func apply(_ input: Substring) throws -> Int {","    guard let int = Int(String(input)) else {","      struct ConvertingError: Error {}","      throw ConvertingError()","    }","    return int","  }","","  func unapply(_ output: Int) -> Substring {","    String(output)[...]","  }","}","","Prefix { $0.isNumber }","  .map(SubstringToInt())"],"syntax":"swift","type":"codeListing"},{"type":"paragraph","inlineContent":[{"text":"If performance is a consideration of your parser-printer, you should avoid ","type":"text"},{"code":"AnyConversion","type":"codeVoice"},{"text":" and","type":"text"},{"text":" ","type":"text"},{"text":"instead create custom types that conform to the ","type":"text"},{"isActive":true,"identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Conversion","type":"reference"},{"text":" protocol.","type":"text"}]}]}],"references":{"doc://co.pointfree.URLRouting/documentation/Parsing/AnyConversion/unapply(_:)":{"kind":"symbol","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/AnyConversion\/unapply(_:)","abstract":[{"text":"Attempts to transform an output back into an input.","type":"text"}],"role":"symbol","title":"unapply(_:)","url":"\/documentation\/parsing\/anyconversion\/unapply(_:)","type":"topic","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"unapply","kind":"identifier"},{"text":"(","kind":"text"},{"text":"Output","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Input","kind":"typeIdentifier"}]},"doc://co.pointfree.URLRouting/documentation/Parsing":{"kind":"symbol","abstract":[],"type":"topic","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing","url":"\/documentation\/parsing","role":"collection","title":"Parsing"},"doc://co.pointfree.URLRouting/documentation/Parsing/AnyConversion/init(_:)":{"identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/AnyConversion\/init(_:)","type":"topic","kind":"symbol","role":"symbol","abstract":[{"type":"text","text":"Creates a type-erasing conversion to wrap the given conversion."}],"title":"init(_:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"<"},{"text":"C","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"C","kind":"typeIdentifier"},{"text":")","kind":"text"}],"url":"\/documentation\/parsing\/anyconversion\/init(_:)"},"doc://co.pointfree.URLRouting/documentation/Parsing/Conversion":{"kind":"symbol","abstract":[{"text":"Declares a type that can transform an ","type":"text"},{"code":"Input","type":"codeVoice"},{"text":" value into an ","type":"text"},{"code":"Output","type":"codeVoice"},{"text":" value ","type":"text"},{"inlineContent":[{"type":"text","text":"and"}],"type":"emphasis"},{"text":" transform an","type":"text"},{"text":" ","type":"text"},{"code":"Output","type":"codeVoice"},{"text":" value back into an ","type":"text"},{"code":"Input","type":"codeVoice"},{"text":" value.","type":"text"}],"type":"topic","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Conversion","url":"\/documentation\/parsing\/conversion","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Conversion","kind":"identifier"}],"role":"symbol","navigatorTitle":[{"text":"Conversion","kind":"identifier"}],"title":"Conversion"},"doc://co.pointfree.URLRouting/documentation/Parsing/AnyConversion":{"url":"\/documentation\/parsing\/anyconversion","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AnyConversion","kind":"identifier"}],"navigatorTitle":[{"text":"AnyConversion","kind":"identifier"}],"abstract":[{"text":"A type-erased ","type":"text"},{"isActive":true,"identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Conversion","type":"reference"},{"text":".","type":"text"}],"role":"symbol","type":"topic","title":"AnyConversion","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/AnyConversion","kind":"symbol"},"doc://co.pointfree.URLRouting/documentation/Parsing/AnyConversion/apply(_:)":{"kind":"symbol","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/AnyConversion\/apply(_:)","abstract":[{"text":"Attempts to transform an input into an output.","type":"text"}],"role":"symbol","title":"apply(_:)","url":"\/documentation\/parsing\/anyconversion\/apply(_:)","type":"topic","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"apply","kind":"identifier"},{"text":"(","kind":"text"},{"text":"Input","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Output","kind":"typeIdentifier"}]},"doc://co.pointfree.URLRouting/documentation/Parsing/AnyConversion/Conversion-Implementations":{"abstract":[],"identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/AnyConversion\/Conversion-Implementations","title":"Conversion Implementations","type":"topic","url":"\/documentation\/parsing\/anyconversion\/conversion-implementations","kind":"article","role":"collectionGroup"},"doc://co.pointfree.URLRouting/documentation/Parsing/AnyConversion/init(apply:unapply:)":{"fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"apply"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Output"},{"kind":"text","text":"?, "},{"text":"unapply","kind":"externalParam"},{"text":": (","kind":"text"},{"text":"Output","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Input","kind":"typeIdentifier"},{"text":"?)","kind":"text"}],"role":"symbol","title":"init(apply:unapply:)","type":"topic","abstract":[{"text":"Creates a conversion that wraps the given closures in its ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/AnyConversion\/apply(_:)"},{"text":" and ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/AnyConversion\/unapply(_:)"},{"text":" ","type":"text"},{"text":"methods, throwing an error when ","type":"text"},{"type":"codeVoice","code":"nil"},{"text":" is returned.","type":"text"}],"identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/AnyConversion\/init(apply:unapply:)","url":"\/documentation\/parsing\/anyconversion\/init(apply:unapply:)","kind":"symbol"}}}