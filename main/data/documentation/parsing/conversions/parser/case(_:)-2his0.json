{"abstract":[{"type":"text","text":"Converts the associated values of an enum case into the case, and an enum case into its"},{"type":"text","text":" "},{"type":"text","text":"associated values."}],"hierarchy":{"paths":[["doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing","doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Conversions","doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Conversions\/Parser","doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Conversions\/Parser\/Conversion-Implementations"]]},"variants":[{"paths":["\/documentation\/parsing\/conversions\/parser\/case(_:)-2his0"],"traits":[{"interfaceLanguage":"swift"}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"kind":"symbol","identifier":{"url":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Conversions\/Parser\/case(_:)-2his0","interfaceLanguage":"swift"},"primaryContentSections":[{"declarations":[{"languages":["swift"],"platforms":["Linux"],"tokens":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"`case`","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Values","kind":"genericParameter"},{"text":", ","kind":"text"},{"kind":"genericParameter","text":"Enum"},{"kind":"text","text":">("},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"initializer"},{"kind":"text","text":": "},{"kind":"keyword","text":"@escaping"},{"kind":"text","text":" ("},{"kind":"typeIdentifier","text":"Values"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Enum"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":" "},{"kind":"keyword","text":"where"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":" == "},{"kind":"typeIdentifier","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/CasePaths\/CasePath","preciseIdentifier":"s:9CasePaths0A4PathV","text":"CasePath"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Enum"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Values"},{"kind":"text","text":">"}]}],"kind":"declarations"},{"kind":"content","content":[{"type":"heading","text":"Return Value","anchor":"return-value","level":2},{"inlineContent":[{"type":"text","text":"A conversion that can embed the associated values of an enum case into the case,"},{"type":"text","text":" "},{"type":"text","text":"and extract the associated values from the case."}],"type":"paragraph"}]},{"parameters":[{"name":"embed","content":[{"inlineContent":[{"text":"An embed function where ","type":"text"},{"type":"codeVoice","code":"Values"},{"text":" directly maps to the memory","type":"text"},{"text":" ","type":"text"},{"text":"layout of ","type":"text"},{"type":"codeVoice","code":"Enum"},{"text":", for example the internal, default initializer that is automatically","type":"text"},{"text":" ","type":"text"},{"text":"synthesized for structs.","type":"text"}],"type":"paragraph"}]}],"kind":"parameters"},{"kind":"content","content":[{"text":"Discussion","level":2,"anchor":"discussion","type":"heading"},{"inlineContent":[{"text":"Useful for transforming the output of a ","type":"text"},{"isActive":true,"identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/ParserPrinter","type":"reference"},{"text":" into an enum:","type":"text"}],"type":"paragraph"},{"code":["enum Expression {","  case add(Int, Int)","  ...","}","","let add = ParsePrint(.case(Expression.add)) {","  Int.parser()","  \"+\"","  Int.parser()","}","try add.parse(\"1+2\")  \/\/ Expression.add(1, 2)"],"syntax":"swift","type":"codeListing"},{"inlineContent":[{"text":"To transform the output of a ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/ParserPrinter"},{"text":" into a struct, see ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Conversions\/Parser\/memberwise(_:)"},{"text":".","type":"text"}],"type":"paragraph"}]}],"metadata":{"fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"`case`"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Values"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"Enum"},{"kind":"text","text":">(("},{"kind":"typeIdentifier","text":"Values"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Enum"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Self"}],"extendedModule":"Parsing","externalID":"s:7Parsing10ConversionPAAE4casey9CasePaths0D4PathVyqd_0_qd__Gqd_0_qd__cAHRszr0_lFZ::SYNTHESIZED::s:7Parsing11ConversionsO6ParserV","roleHeading":"Type Method","modules":[{"name":"Parsing"}],"title":"case(_:)","role":"symbol","symbolKind":"method"},"sections":[],"references":{"doc://co.pointfree.URLRouting/documentation/CasePaths/CasePath":{"title":"CasePath","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/CasePaths\/CasePath","url":"\/documentation\/casepaths\/casepath","abstract":[{"text":"A path that supports embedding a value in a root and attempting to extract a root’s embedded","type":"text"},{"text":" ","type":"text"},{"text":"value.","type":"text"}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"CasePath","kind":"identifier"}],"type":"topic","kind":"symbol","navigatorTitle":[{"text":"CasePath","kind":"identifier"}],"role":"symbol"},"doc://co.pointfree.URLRouting/documentation/Parsing/Conversions/Parser/Conversion-Implementations":{"type":"topic","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Conversions\/Parser\/Conversion-Implementations","url":"\/documentation\/parsing\/conversions\/parser\/conversion-implementations","title":"Conversion Implementations","abstract":[],"role":"collectionGroup","kind":"article"},"doc://co.pointfree.URLRouting/documentation/Parsing/Conversions/Parser/memberwise(_:)":{"url":"\/documentation\/parsing\/conversions\/parser\/memberwise(_:)","kind":"symbol","fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"memberwise"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Values"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"Struct"},{"kind":"text","text":">(("},{"kind":"typeIdentifier","text":"Values"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Struct"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Self"}],"type":"topic","abstract":[{"type":"text","text":"A conversion from a tuple of values into a struct and a struct into a tuple of values, using a"},{"text":" ","type":"text"},{"text":"memberwise initializer.","type":"text"}],"identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Conversions\/Parser\/memberwise(_:)","role":"symbol","title":"memberwise(_:)"},"doc://co.pointfree.URLRouting/documentation/Parsing/ParserPrinter":{"navigatorTitle":[{"text":"ParserPrinter","kind":"identifier"}],"url":"\/documentation\/parsing\/parserprinter","abstract":[{"type":"text","text":"A "},{"isActive":true,"type":"reference","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Parser"},{"type":"text","text":" that can incrementally “print” an output value back into an input."}],"fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"ParserPrinter","kind":"identifier"}],"role":"symbol","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/ParserPrinter","type":"topic","title":"ParserPrinter","kind":"symbol"},"doc://co.pointfree.URLRouting/documentation/Parsing/Conversions":{"title":"Conversions","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"Conversions"}],"type":"topic","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Conversions","url":"\/documentation\/parsing\/conversions","kind":"symbol","abstract":[{"type":"text","text":"A namespace for types that serve as conversions."}],"navigatorTitle":[{"kind":"identifier","text":"Conversions"}],"role":"symbol"},"doc://co.pointfree.URLRouting/documentation/Parsing":{"kind":"symbol","abstract":[],"type":"topic","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing","url":"\/documentation\/parsing","role":"collection","title":"Parsing"},"doc://co.pointfree.URLRouting/documentation/Parsing/Conversions/Parser/case(_:)-2his0":{"url":"\/documentation\/parsing\/conversions\/parser\/case(_:)-2his0","kind":"symbol","fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"`case`","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Values","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"Enum","kind":"genericParameter"},{"text":">((","kind":"text"},{"text":"Values","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Enum","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}],"type":"topic","abstract":[{"text":"Converts the associated values of an enum case into the case, and an enum case into its","type":"text"},{"text":" ","type":"text"},{"text":"associated values.","type":"text"}],"identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Conversions\/Parser\/case(_:)-2his0","role":"symbol","title":"case(_:)"},"doc://co.pointfree.URLRouting/documentation/Parsing/Conversions/Parser":{"navigatorTitle":[{"text":"Parser","kind":"identifier"}],"url":"\/documentation\/parsing\/conversions\/parser","abstract":[{"type":"text","text":"A conversion from a "},{"isActive":true,"type":"reference","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/ParserPrinter"},{"type":"text","text":"’s input to its output."}],"fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"Parser","kind":"identifier"}],"role":"symbol","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Conversions\/Parser","type":"topic","title":"Conversions.Parser","kind":"symbol"},"doc://co.pointfree.URLRouting/documentation/Parsing/Parser":{"kind":"symbol","abstract":[{"text":"Declares a type that can incrementally parse an ","type":"text"},{"code":"Output","type":"codeVoice"},{"text":" value from an ","type":"text"},{"code":"Input","type":"codeVoice"},{"text":" value.","type":"text"}],"type":"topic","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Parser","url":"\/documentation\/parsing\/parser","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Parser","kind":"identifier"}],"role":"symbol","navigatorTitle":[{"text":"Parser","kind":"identifier"}],"title":"Parser"}}}