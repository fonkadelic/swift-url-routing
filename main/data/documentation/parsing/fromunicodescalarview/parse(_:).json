{"identifier":{"url":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/FromUnicodeScalarView\/parse(_:)","interfaceLanguage":"swift"},"primaryContentSections":[{"declarations":[{"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"parse"},{"kind":"text","text":"("},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"input"},{"kind":"text","text":": "},{"kind":"keyword","text":"inout"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":") "},{"kind":"keyword","text":"rethrows"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"UnicodeScalarsParser"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Output"}],"languages":["swift"],"platforms":["Linux"]}],"kind":"declarations"},{"content":[{"level":2,"type":"heading","text":"Return Value","anchor":"return-value"},{"type":"paragraph","inlineContent":[{"text":"A more well-structured value parsed from the given input.","type":"text"}]}],"kind":"content"},{"parameters":[{"name":"input","content":[{"type":"paragraph","inlineContent":[{"text":"A nebulous, mutable piece of data to be incrementally parsed.","type":"text"}]}]}],"kind":"parameters"}],"schemaVersion":{"major":0,"minor":3,"patch":0},"metadata":{"externalID":"s:7Parsing21FromUnicodeScalarViewV5parsey6OutputQy_xzKF","modules":[{"name":"Parsing"}],"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"parse"},{"kind":"text","text":"("},{"kind":"keyword","text":"inout"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":") "},{"kind":"keyword","text":"rethrows"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"UnicodeScalarsParser"},{"text":".","kind":"text"},{"text":"Output","kind":"typeIdentifier"}],"platforms":[],"roleHeading":"Instance Method","title":"parse(_:)","role":"symbol","symbolKind":"method"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/parsing\/fromunicodescalarview\/parse(_:)"]}],"sections":[],"hierarchy":{"paths":[["doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing","doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/FromUnicodeScalarView"]]},"abstract":[{"text":"Attempts to parse a nebulous piece of data into something more well-structured. Typically","type":"text"},{"text":" ","type":"text"},{"text":"you only call this from other ","type":"text"},{"code":"Parser","type":"codeVoice"},{"text":" conformances, not when you want to parse a concrete","type":"text"},{"text":" ","type":"text"},{"text":"input.","type":"text"}],"deprecationSummary":[{"inlineContent":[{"text":"Use 'From(.unicodeScalars)' instead.","type":"text"}],"type":"paragraph"}],"kind":"symbol","references":{"doc://co.pointfree.URLRouting/documentation/Parsing/FromUnicodeScalarView":{"role":"symbol","title":"FromUnicodeScalarView","navigatorTitle":[{"text":"FromUnicodeScalarView","kind":"identifier"}],"deprecated":true,"type":"topic","abstract":[],"identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/FromUnicodeScalarView","url":"\/documentation\/parsing\/fromunicodescalarview","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"FromUnicodeScalarView","kind":"identifier"}],"kind":"symbol"},"doc://co.pointfree.URLRouting/documentation/Parsing":{"kind":"symbol","abstract":[],"type":"topic","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing","url":"\/documentation\/parsing","role":"collection","title":"Parsing"},"doc://co.pointfree.URLRouting/documentation/Parsing/FromUnicodeScalarView/parse(_:)":{"identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/FromUnicodeScalarView\/parse(_:)","abstract":[{"text":"Attempts to parse a nebulous piece of data into something more well-structured. Typically","type":"text"},{"text":" ","type":"text"},{"text":"you only call this from other ","type":"text"},{"code":"Parser","type":"codeVoice"},{"text":" conformances, not when you want to parse a concrete","type":"text"},{"text":" ","type":"text"},{"text":"input.","type":"text"}],"title":"parse(_:)","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"parse","kind":"identifier"},{"text":"(","kind":"text"},{"text":"inout","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Input","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"rethrows","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"UnicodeScalarsParser","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Output","kind":"typeIdentifier"}],"url":"\/documentation\/parsing\/fromunicodescalarview\/parse(_:)","kind":"symbol","deprecated":true,"type":"topic"}}}