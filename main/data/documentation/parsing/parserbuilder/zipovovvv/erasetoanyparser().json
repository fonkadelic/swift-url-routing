{"schemaVersion":{"major":0,"patch":0,"minor":3},"sections":[],"variants":[{"paths":["\/documentation\/parsing\/parserbuilder\/zipovovvv\/erasetoanyparser()"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/ParserBuilder\/ZipOVOVVV\/eraseToAnyParser()","interfaceLanguage":"swift"},"metadata":{"role":"symbol","modules":[{"name":"Parsing"}],"extendedModule":"Parsing","roleHeading":"Instance Method","externalID":"s:7Parsing6ParserPAAE010eraseToAnyB0AA0eB0Vy5InputQz6OutputQzGyF::SYNTHESIZED::s:7Parsing13ParserBuilderO9ZipOVOVVVV","symbolKind":"method","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"eraseToAnyParser","kind":"identifier"},{"text":"() -> ","kind":"text"},{"preciseIdentifier":"s:7Parsing9AnyParserV","text":"AnyParser","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Input","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Output","kind":"typeIdentifier"},{"text":">","kind":"text"}],"title":"eraseToAnyParser()"},"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"eraseToAnyParser"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:7Parsing9AnyParserV","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/AnyParser","text":"AnyParser"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Output"},{"kind":"text","text":">"}],"platforms":["Linux"]}]},{"content":[{"text":"Return Value","type":"heading","anchor":"return-value","level":2},{"type":"paragraph","inlineContent":[{"type":"text","text":"An "},{"type":"reference","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/AnyParser","isActive":true},{"type":"text","text":" wrapping this parser."}]}],"kind":"content"},{"content":[{"text":"Discussion","anchor":"discussion","type":"heading","level":2},{"type":"paragraph","inlineContent":[{"type":"text","text":"This form of "},{"type":"emphasis","inlineContent":[{"type":"text","text":"type erasure"}]},{"type":"text","text":" preserves abstraction across API boundaries, such as different"},{"type":"text","text":" "},{"type":"text","text":"modules."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"When you expose your composed parsers as the "},{"identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/AnyParser","isActive":true,"type":"reference"},{"type":"text","text":" type, you can change the underlying"},{"text":" ","type":"text"},{"text":"implementation over time without affecting existing clients.","type":"text"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Equivalent to passing "},{"type":"codeVoice","code":"self"},{"type":"text","text":" to "},{"type":"codeVoice","code":"AnyParser.init"},{"type":"text","text":"."}]}],"kind":"content"}],"hierarchy":{"paths":[["doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing","doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/ParserBuilder","doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/ParserBuilder\/ZipOVOVVV","doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/ParserBuilder\/ZipOVOVVV\/Parser-Implementations"]]},"abstract":[{"type":"text","text":"Wraps this parser with a type eraser."}],"kind":"symbol","references":{"doc://co.pointfree.URLRouting/documentation/Parsing/ParserBuilder/ZipOVOVVV":{"kind":"symbol","title":"ParserBuilder.ZipOVOVVV","navigatorTitle":[{"kind":"identifier","text":"ZipOVOVVV"}],"type":"topic","abstract":[],"role":"symbol","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/ParserBuilder\/ZipOVOVVV","url":"\/documentation\/parsing\/parserbuilder\/zipovovvv","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"ZipOVOVVV"}]},"doc://co.pointfree.URLRouting/documentation/Parsing/ParserBuilder":{"kind":"symbol","abstract":[{"text":"A custom parameter attribute that constructs parsers from closures. The constructed parser","type":"text"},{"text":" ","type":"text"},{"text":"runs a number of parsers, one after the other, and accumulates their outputs.","type":"text"}],"type":"topic","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/ParserBuilder","url":"\/documentation\/parsing\/parserbuilder","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ParserBuilder","kind":"identifier"}],"role":"symbol","navigatorTitle":[{"text":"ParserBuilder","kind":"identifier"}],"title":"ParserBuilder"},"doc://co.pointfree.URLRouting/documentation/Parsing/ParserBuilder/ZipOVOVVV/eraseToAnyParser()":{"abstract":[{"type":"text","text":"Wraps this parser with a type eraser."}],"type":"topic","url":"\/documentation\/parsing\/parserbuilder\/zipovovvv\/erasetoanyparser()","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"eraseToAnyParser","kind":"identifier"},{"text":"() -> ","kind":"text"},{"text":"AnyParser","kind":"typeIdentifier","preciseIdentifier":"s:7Parsing9AnyParserV"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Input","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Output","kind":"typeIdentifier"},{"text":">","kind":"text"}],"identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/ParserBuilder\/ZipOVOVVV\/eraseToAnyParser()","kind":"symbol","title":"eraseToAnyParser()","role":"symbol"},"doc://co.pointfree.URLRouting/documentation/Parsing":{"kind":"symbol","abstract":[],"type":"topic","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing","url":"\/documentation\/parsing","role":"collection","title":"Parsing"},"doc://co.pointfree.URLRouting/documentation/Parsing/ParserBuilder/ZipOVOVVV/Parser-Implementations":{"abstract":[],"kind":"article","url":"\/documentation\/parsing\/parserbuilder\/zipovovvv\/parser-implementations","role":"collectionGroup","title":"Parser Implementations","type":"topic","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/ParserBuilder\/ZipOVOVVV\/Parser-Implementations"},"doc://co.pointfree.URLRouting/documentation/Parsing/AnyParser":{"fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"AnyParser","kind":"identifier"}],"title":"AnyParser","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/AnyParser","kind":"symbol","role":"symbol","url":"\/documentation\/parsing\/anyparser","navigatorTitle":[{"text":"AnyParser","kind":"identifier"}],"type":"topic","abstract":[{"text":"A type-erased parser of ","type":"text"},{"code":"Output","type":"codeVoice"},{"text":" from ","type":"text"},{"code":"Input","type":"codeVoice"},{"text":".","type":"text"}]}}}