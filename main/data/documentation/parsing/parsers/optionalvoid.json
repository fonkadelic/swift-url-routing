{"relationshipsSections":[{"kind":"relationships","identifiers":["doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Parser","doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/ParserPrinter"],"title":"Conforms To","type":"conformsTo"}],"kind":"symbol","metadata":{"externalID":"s:7Parsing7ParsersO12OptionalVoidV","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"OptionalVoid"}],"symbolKind":"struct","title":"Parsers.OptionalVoid","navigatorTitle":[{"kind":"identifier","text":"OptionalVoid"}],"extendedModule":"Parsing","roleHeading":"Structure","modules":[{"name":"Parsing"}],"role":"symbol"},"abstract":[{"type":"text","text":"A parser that attempts to run a given void parser, succeeding with void."}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/parsing\/parsers\/optionalvoid"]}],"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"platforms":["Linux"],"tokens":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"OptionalVoid","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Wrapped","kind":"genericParameter"},{"text":"> ","kind":"text"},{"text":"where","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Wrapped","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"text":"Parser","preciseIdentifier":"s:7Parsing6ParserP","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Parser","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Wrapped","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Output","kind":"typeIdentifier"},{"text":" == ","kind":"text"},{"text":"Void","kind":"typeIdentifier","preciseIdentifier":"s:s4Voida"}]}]},{"kind":"content","content":[{"text":"Overview","type":"heading","anchor":"overview","level":2},{"inlineContent":[{"type":"text","text":"You will not typically need to interact with this type directly. Instead you will usually use"},{"type":"text","text":" "},{"type":"codeVoice","code":"if"},{"type":"text","text":" statements in parser builder blocks:"}],"type":"paragraph"},{"syntax":"swift","type":"codeListing","code":["Parse {","  \"Hello\"","  if useComma {","    \",\"","  }","  \" \"","  Rest()","}"]}]}],"hierarchy":{"paths":[["doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing","doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Parsers"]]},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Parsers\/OptionalVoid"},"schemaVersion":{"major":0,"minor":3,"patch":0},"topicSections":[{"identifiers":["doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Parsers\/OptionalVoid\/init(wrapped:)"],"title":"Initializers"},{"identifiers":["doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Parsers\/OptionalVoid\/parse(_:)"],"title":"Instance Methods"},{"identifiers":["doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Parsers\/OptionalVoid\/Parser-Implementations","doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Parsers\/OptionalVoid\/ParserPrinter-Implementations"],"title":"Default Implementations","generated":true}],"sections":[],"references":{"doc://co.pointfree.URLRouting/documentation/Parsing/Parsers/OptionalVoid/ParserPrinter-Implementations":{"role":"collectionGroup","kind":"article","title":"ParserPrinter Implementations","type":"topic","url":"\/documentation\/parsing\/parsers\/optionalvoid\/parserprinter-implementations","abstract":[],"identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Parsers\/OptionalVoid\/ParserPrinter-Implementations"},"doc://co.pointfree.URLRouting/documentation/Parsing/Parsers/OptionalVoid/init(wrapped:)":{"url":"\/documentation\/parsing\/parsers\/optionalvoid\/init(wrapped:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"wrapped"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Wrapped"},{"kind":"text","text":"?)"}],"kind":"symbol","abstract":[],"type":"topic","role":"symbol","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Parsers\/OptionalVoid\/init(wrapped:)","title":"init(wrapped:)"},"doc://co.pointfree.URLRouting/documentation/Parsing/Parsers/OptionalVoid/parse(_:)":{"url":"\/documentation\/parsing\/parsers\/optionalvoid\/parse(_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"parse"},{"kind":"text","text":"("},{"kind":"keyword","text":"inout"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"Wrapped"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":") "},{"kind":"keyword","text":"rethrows"}],"kind":"symbol","abstract":[{"type":"text","text":"Attempts to parse a nebulous piece of data into something more well-structured. Typically"},{"type":"text","text":" "},{"type":"text","text":"you only call this from other "},{"code":"Parser","type":"codeVoice"},{"type":"text","text":" conformances, not when you want to parse a concrete"},{"type":"text","text":" "},{"type":"text","text":"input."}],"type":"topic","role":"symbol","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Parsers\/OptionalVoid\/parse(_:)","title":"parse(_:)"},"doc://co.pointfree.URLRouting/documentation/Parsing/ParserPrinter":{"url":"\/documentation\/parsing\/parserprinter","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"ParserPrinter"}],"kind":"symbol","abstract":[{"type":"text","text":"A "},{"identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Parser","type":"reference","isActive":true},{"type":"text","text":" that can incrementally “print” an output value back into an input."}],"conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}],"constraints":[{"code":"Wrapped","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"ParserPrinter","type":"codeVoice"},{"text":" and ","type":"text"},{"code":"Wrapped.Output","type":"codeVoice"},{"text":" is ","type":"text"},{"code":"Void","type":"codeVoice"},{"text":".","type":"text"}]},"type":"topic","role":"symbol","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/ParserPrinter","navigatorTitle":[{"kind":"identifier","text":"ParserPrinter"}],"title":"ParserPrinter"},"doc://co.pointfree.URLRouting/documentation/Parsing/Parsers/OptionalVoid/Parser-Implementations":{"identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Parsers\/OptionalVoid\/Parser-Implementations","type":"topic","url":"\/documentation\/parsing\/parsers\/optionalvoid\/parser-implementations","role":"collectionGroup","title":"Parser Implementations","abstract":[],"kind":"article"},"doc://co.pointfree.URLRouting/documentation/Parsing/Parsers":{"kind":"symbol","abstract":[{"text":"A namespace for types that serve as parsers.","type":"text"}],"type":"topic","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Parsers","url":"\/documentation\/parsing\/parsers","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Parsers","kind":"identifier"}],"role":"symbol","navigatorTitle":[{"text":"Parsers","kind":"identifier"}],"title":"Parsers"},"doc://co.pointfree.URLRouting/documentation/Parsing/Parsers/OptionalVoid":{"role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"OptionalVoid","kind":"identifier"}],"kind":"symbol","title":"Parsers.OptionalVoid","type":"topic","url":"\/documentation\/parsing\/parsers\/optionalvoid","navigatorTitle":[{"text":"OptionalVoid","kind":"identifier"}],"abstract":[{"text":"A parser that attempts to run a given void parser, succeeding with void.","type":"text"}],"identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Parsers\/OptionalVoid"},"doc://co.pointfree.URLRouting/documentation/Parsing/Parser":{"kind":"symbol","abstract":[{"text":"Declares a type that can incrementally parse an ","type":"text"},{"code":"Output","type":"codeVoice"},{"text":" value from an ","type":"text"},{"code":"Input","type":"codeVoice"},{"text":" value.","type":"text"}],"type":"topic","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Parser","url":"\/documentation\/parsing\/parser","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Parser","kind":"identifier"}],"role":"symbol","navigatorTitle":[{"text":"Parser","kind":"identifier"}],"title":"Parser"},"doc://co.pointfree.URLRouting/documentation/Parsing":{"kind":"symbol","abstract":[],"type":"topic","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing","url":"\/documentation\/parsing","role":"collection","title":"Parsing"}}}