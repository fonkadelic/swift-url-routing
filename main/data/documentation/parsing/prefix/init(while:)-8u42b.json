{"sections":[],"hierarchy":{"paths":[["doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing","doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Prefix"]]},"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"while"},{"kind":"text","text":" "},{"kind":"internalParam","text":"predicate"},{"kind":"text","text":": "},{"kind":"keyword","text":"@escaping"},{"kind":"text","text":" ("},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"},{"kind":"text","text":")"}],"platforms":["Linux"],"languages":["swift"]}]},{"parameters":[{"content":[{"type":"paragraph","inlineContent":[{"text":"A length that provides a minimum number and maximum of elements to consume for","type":"text"},{"text":" ","type":"text"},{"text":"parsing to be considered successful.","type":"text"}]}],"name":"length"},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"An closure that takes an element of the input sequence as its argument and"},{"type":"text","text":" "},{"type":"text","text":"returns "},{"type":"codeVoice","code":"true"},{"type":"text","text":" if the element should be included or "},{"type":"codeVoice","code":"false"},{"type":"text","text":" if it should be excluded. Once"},{"type":"text","text":" "},{"type":"text","text":"the predicate returns "},{"type":"codeVoice","code":"false"},{"type":"text","text":" it will not be called again."}]}],"name":"predicate"}],"kind":"parameters"},{"kind":"content","content":[{"level":2,"type":"heading","anchor":"discussion","text":"Discussion"},{"type":"codeListing","syntax":"swift","code":["try Prefix { $0.isNumber }.parse(\"123456\")  \/\/ \"123456\""]}]}],"metadata":{"fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"while"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"},{"kind":"text","text":")"}],"title":"init(while:)","externalID":"s:7Parsing6PrefixV5whileACyxGSb7ElementQzc_tcfc","role":"symbol","roleHeading":"Initializer","symbolKind":"init","modules":[{"name":"Parsing"}]},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Prefix\/init(while:)-8u42b"},"variants":[{"paths":["\/documentation\/parsing\/prefix\/init(while:)-8u42b"],"traits":[{"interfaceLanguage":"swift"}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"abstract":[{"type":"text","text":"Initializes a parser that consumes a subsequence from the beginning of its input."}],"kind":"symbol","references":{"doc://co.pointfree.URLRouting/documentation/Parsing/Prefix":{"kind":"symbol","abstract":[{"text":"A parser that consumes a subsequence from the beginning of its input.","type":"text"}],"type":"topic","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Prefix","url":"\/documentation\/parsing\/prefix","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Prefix","kind":"identifier"}],"role":"symbol","navigatorTitle":[{"text":"Prefix","kind":"identifier"}],"title":"Prefix"},"doc://co.pointfree.URLRouting/documentation/Parsing/Prefix/init(while:)-8u42b":{"type":"topic","url":"\/documentation\/parsing\/prefix\/init(while:)-8u42b","kind":"symbol","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"while"},{"text":": (","kind":"text"},{"text":"Input","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Element","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","text":")"}],"role":"symbol","title":"init(while:)","abstract":[{"type":"text","text":"Initializes a parser that consumes a subsequence from the beginning of its input."}],"identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Prefix\/init(while:)-8u42b"},"doc://co.pointfree.URLRouting/documentation/Parsing":{"kind":"symbol","abstract":[],"type":"topic","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing","url":"\/documentation\/parsing","role":"collection","title":"Parsing"}}}