{"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/parsing\/prefixupto"]}],"metadata":{"roleHeading":"Structure","externalID":"s:7Parsing10PrefixUpToV","symbolKind":"struct","navigatorTitle":[{"text":"PrefixUpTo","kind":"identifier"}],"modules":[{"name":"Parsing"}],"title":"PrefixUpTo","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"PrefixUpTo","kind":"identifier"}]},"hierarchy":{"paths":[["doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing"]]},"schemaVersion":{"patch":0,"minor":3,"major":0},"relationshipsSections":[{"title":"Conforms To","type":"conformsTo","identifiers":["doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Parser","doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/ParserPrinter"],"kind":"relationships"}],"primaryContentSections":[{"declarations":[{"languages":["swift"],"platforms":["Linux"],"tokens":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"PrefixUpTo"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Input"},{"kind":"text","text":"> "},{"kind":"keyword","text":"where"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","text":"Collection","preciseIdentifier":"s:Sl"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":" == "},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"SubSequence"}]}],"kind":"declarations"},{"content":[{"anchor":"overview","level":2,"text":"Overview","type":"heading"},{"type":"paragraph","inlineContent":[{"type":"text","text":"This parser is named after "},{"type":"codeVoice","code":"Sequence.prefix(upTo:)"},{"type":"text","text":", and uses similar logic under the hood to"},{"type":"text","text":" "},{"type":"text","text":"consume and return input up to a particular subsequence."}]},{"syntax":"swift","type":"codeListing","code":["let lineParser = PrefixUpTo(\"\\n\")","","var input = \"Hello\\nworld\\n\"[...]","try line.parse(&input)  \/\/ \"Hello\"","input                   \/\/ \"\\nworld\\n\""]}],"kind":"content"}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/PrefixUpTo"},"abstract":[{"type":"text","text":"A parser that consumes a subsequence from the beginning of its input up to a given sequence of"},{"type":"text","text":" "},{"type":"text","text":"elements."}],"sections":[],"topicSections":[{"title":"Initializers","identifiers":["doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/PrefixUpTo\/init(_:)-7b2he","doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/PrefixUpTo\/init(_:)-8sywj","doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/PrefixUpTo\/init(_:)-9kyot","doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/PrefixUpTo\/init(_:by:)"]},{"title":"Instance Properties","identifiers":["doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/PrefixUpTo\/areEquivalent","doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/PrefixUpTo\/possibleMatch"]},{"title":"Instance Methods","identifiers":["doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/PrefixUpTo\/parse(_:)"]},{"title":"Default Implementations","identifiers":["doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/PrefixUpTo\/Parser-Implementations","doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/PrefixUpTo\/ParserPrinter-Implementations"],"generated":true}],"kind":"symbol","references":{"doc://co.pointfree.URLRouting/documentation/Parsing/PrefixUpTo/init(_:)-9kyot":{"type":"topic","url":"\/documentation\/parsing\/prefixupto\/init(_:)-9kyot","title":"init(_:)","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/PrefixUpTo\/init(_:)-9kyot","abstract":[],"role":"symbol","conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"code":"Input","type":"codeVoice"},{"type":"text","text":" is "},{"code":"Substring.UTF8View","type":"codeVoice"},{"type":"text","text":"."}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"preciseIdentifier":"s:SS","text":"String","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:SS8UTF8ViewV","text":"UTF8View","kind":"typeIdentifier"},{"text":")","kind":"text"}],"kind":"symbol"},"doc://co.pointfree.URLRouting/documentation/Parsing/PrefixUpTo/Parser-Implementations":{"role":"collectionGroup","abstract":[],"type":"topic","title":"Parser Implementations","kind":"article","url":"\/documentation\/parsing\/prefixupto\/parser-implementations","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/PrefixUpTo\/Parser-Implementations"},"doc://co.pointfree.URLRouting/documentation/Parsing":{"kind":"symbol","abstract":[],"type":"topic","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing","url":"\/documentation\/parsing","role":"collection","title":"Parsing"},"doc://co.pointfree.URLRouting/documentation/Parsing/Parser":{"kind":"symbol","abstract":[{"text":"Declares a type that can incrementally parse an ","type":"text"},{"code":"Output","type":"codeVoice"},{"text":" value from an ","type":"text"},{"code":"Input","type":"codeVoice"},{"text":" value.","type":"text"}],"type":"topic","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Parser","url":"\/documentation\/parsing\/parser","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Parser","kind":"identifier"}],"role":"symbol","navigatorTitle":[{"text":"Parser","kind":"identifier"}],"title":"Parser"},"doc://co.pointfree.URLRouting/documentation/Parsing/PrefixUpTo/parse(_:)":{"identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/PrefixUpTo\/parse(_:)","role":"symbol","type":"topic","title":"parse(_:)","url":"\/documentation\/parsing\/prefixupto\/parse(_:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"parse","kind":"identifier"},{"text":"(","kind":"text"},{"text":"inout","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Input","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Input","kind":"typeIdentifier"}],"abstract":[{"type":"text","text":"Attempts to parse a nebulous piece of data into something more well-structured. Typically"},{"type":"text","text":" "},{"type":"text","text":"you only call this from other "},{"code":"Parser","type":"codeVoice"},{"type":"text","text":" conformances, not when you want to parse a concrete"},{"type":"text","text":" "},{"type":"text","text":"input."}],"kind":"symbol"},"doc://co.pointfree.URLRouting/documentation/Parsing/PrefixUpTo/areEquivalent":{"identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/PrefixUpTo\/areEquivalent","type":"topic","fragments":[{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"text":"areEquivalent","kind":"identifier"},{"text":": (","kind":"text"},{"text":"Input","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Element","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Input","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Element","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"}],"url":"\/documentation\/parsing\/prefixupto\/areequivalent","abstract":[],"kind":"symbol","role":"symbol","title":"areEquivalent"},"doc://co.pointfree.URLRouting/documentation/Parsing/PrefixUpTo":{"type":"topic","title":"PrefixUpTo","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"PrefixUpTo","kind":"identifier"}],"navigatorTitle":[{"text":"PrefixUpTo","kind":"identifier"}],"kind":"symbol","abstract":[{"type":"text","text":"A parser that consumes a subsequence from the beginning of its input up to a given sequence of"},{"text":" ","type":"text"},{"text":"elements.","type":"text"}],"identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/PrefixUpTo","role":"symbol","url":"\/documentation\/parsing\/prefixupto"},"doc://co.pointfree.URLRouting/documentation/Parsing/ParserPrinter":{"navigatorTitle":[{"text":"ParserPrinter","kind":"identifier"}],"type":"topic","url":"\/documentation\/parsing\/parserprinter","kind":"symbol","conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"type":"codeVoice","code":"Input"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"PrependableCollection"},{"type":"text","text":" and "},{"type":"codeVoice","code":"Input"},{"type":"text","text":" is "},{"type":"codeVoice","code":"Input.SubSequence"},{"type":"text","text":"."}]},"fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"ParserPrinter","kind":"identifier"}],"role":"symbol","title":"ParserPrinter","abstract":[{"type":"text","text":"A "},{"identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Parser","type":"reference","isActive":true},{"type":"text","text":" that can incrementally “print” an output value back into an input."}],"identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/ParserPrinter"},"doc://co.pointfree.URLRouting/documentation/Parsing/PrefixUpTo/init(_:)-8sywj":{"fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"Input","kind":"typeIdentifier"},{"kind":"text","text":")"}],"identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/PrefixUpTo\/init(_:)-8sywj","url":"\/documentation\/parsing\/prefixupto\/init(_:)-8sywj","title":"init(_:)","kind":"symbol","conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}],"constraints":[{"code":"Input","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"Collection","type":"codeVoice"},{"type":"text","text":", "},{"type":"codeVoice","code":"Input"},{"type":"text","text":" is "},{"type":"codeVoice","code":"Input.SubSequence"},{"type":"text","text":", and "},{"type":"codeVoice","code":"Input.Element"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Equatable"},{"type":"text","text":"."}]},"type":"topic","abstract":[],"role":"symbol"},"doc://co.pointfree.URLRouting/documentation/Parsing/PrefixUpTo/init(_:by:)":{"role":"symbol","abstract":[],"identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/PrefixUpTo\/init(_:by:)","title":"init(_:by:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":", "},{"kind":"externalParam","text":"by"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","text":")"}],"url":"\/documentation\/parsing\/prefixupto\/init(_:by:)","kind":"symbol","type":"topic"},"doc://co.pointfree.URLRouting/documentation/Parsing/PrefixUpTo/init(_:)-7b2he":{"type":"topic","url":"\/documentation\/parsing\/prefixupto\/init(_:)-7b2he","title":"init(_:)","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/PrefixUpTo\/init(_:)-7b2he","abstract":[],"role":"symbol","conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"code":"Input","type":"codeVoice"},{"text":" is ","type":"text"},{"code":"Substring","type":"codeVoice"},{"text":".","type":"text"}]},"fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"preciseIdentifier":"s:SS","text":"String","kind":"typeIdentifier"},{"text":")","kind":"text"}],"kind":"symbol"},"doc://co.pointfree.URLRouting/documentation/Parsing/PrefixUpTo/ParserPrinter-Implementations":{"type":"topic","title":"ParserPrinter Implementations","kind":"article","abstract":[],"identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/PrefixUpTo\/ParserPrinter-Implementations","role":"collectionGroup","url":"\/documentation\/parsing\/prefixupto\/parserprinter-implementations"},"doc://co.pointfree.URLRouting/documentation/Parsing/PrefixUpTo/possibleMatch":{"title":"possibleMatch","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/PrefixUpTo\/possibleMatch","type":"topic","url":"\/documentation\/parsing\/prefixupto\/possiblematch","kind":"symbol","fragments":[{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"text":"possibleMatch","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Input","kind":"typeIdentifier"}],"role":"symbol","abstract":[]}}}