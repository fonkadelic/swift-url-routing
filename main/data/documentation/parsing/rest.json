{"abstract":[{"type":"text","text":"A parser that consumes everything to the end of the collection and returns this subsequence as"},{"text":" ","type":"text"},{"text":"its output.","type":"text"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/parsing\/rest"]}],"topicSections":[{"identifiers":["doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Rest\/init()-3wugv","doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Rest\/init()-41jf5","doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Rest\/init()-9bc09"],"title":"Initializers"},{"identifiers":["doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Rest\/parse(_:)"],"title":"Instance Methods"},{"identifiers":["doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Rest\/Parser-Implementations","doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Rest\/ParserPrinter-Implementations"],"generated":true,"title":"Default Implementations"}],"identifier":{"url":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Rest","interfaceLanguage":"swift"},"relationshipsSections":[{"type":"conformsTo","identifiers":["doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Parser","doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/ParserPrinter"],"kind":"relationships","title":"Conforms To"}],"schemaVersion":{"minor":3,"major":0,"patch":0},"primaryContentSections":[{"declarations":[{"tokens":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"Rest","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Input","kind":"genericParameter"},{"text":"> ","kind":"text"},{"text":"where","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Input","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"text":"Collection","preciseIdentifier":"s:Sl","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Input","kind":"typeIdentifier"},{"text":" == ","kind":"text"},{"text":"Input","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"SubSequence","kind":"typeIdentifier"}],"platforms":["Linux"],"languages":["swift"]}],"kind":"declarations"},{"content":[{"level":2,"type":"heading","text":"Overview","anchor":"overview"},{"code":["var input = \"Hello\"[...]","Rest().parse(&input)  \/\/ \"Hello\"","input                 \/\/ \"\""],"type":"codeListing","syntax":"swift"},{"type":"paragraph","inlineContent":[{"text":"This parser fails if there is no input to consume:","type":"text"}]},{"code":["try Rest().parse(\"\")","","\/\/\/ error: unexpected input","\/\/\/  --> input:1:1","\/\/\/ 1 |","\/\/\/   | ^ expected a non-empty input"],"type":"codeListing","syntax":"swift"},{"type":"paragraph","inlineContent":[{"text":"If you want to allow for the possibility of an empty remaining input you can use the","type":"text"},{"text":" ","type":"text"},{"identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Optionally","type":"reference","isActive":true},{"text":" parser to parse an optional output value, or the ","type":"text"},{"identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Rest\/replaceError(with:)","type":"reference","isActive":true},{"text":" method","type":"text"},{"text":" ","type":"text"},{"text":"to coalesce the error into a default output value.","type":"text"}]}],"kind":"content"}],"hierarchy":{"paths":[["doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing"]]},"metadata":{"symbolKind":"struct","externalID":"s:7Parsing4RestV","roleHeading":"Structure","title":"Rest","navigatorTitle":[{"text":"Rest","kind":"identifier"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Rest","kind":"identifier"}],"role":"symbol","modules":[{"name":"Parsing"}]},"sections":[],"kind":"symbol","references":{"doc://co.pointfree.URLRouting/documentation/Parsing/ParserPrinter":{"navigatorTitle":[{"text":"ParserPrinter","kind":"identifier"}],"type":"topic","url":"\/documentation\/parsing\/parserprinter","kind":"symbol","conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"type":"codeVoice","code":"Input"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"PrependableCollection"},{"type":"text","text":" and "},{"type":"codeVoice","code":"Input"},{"type":"text","text":" is "},{"type":"codeVoice","code":"Input.SubSequence"},{"type":"text","text":"."}]},"fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"ParserPrinter","kind":"identifier"}],"role":"symbol","title":"ParserPrinter","abstract":[{"type":"text","text":"A "},{"identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Parser","type":"reference","isActive":true},{"type":"text","text":" that can incrementally “print” an output value back into an input."}],"identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/ParserPrinter"},"doc://co.pointfree.URLRouting/documentation/Parsing/Rest/init()-3wugv":{"url":"\/documentation\/parsing\/rest\/init()-3wugv","fragments":[{"text":"init","kind":"identifier"},{"text":"()","kind":"text"}],"title":"init()","kind":"symbol","conformance":{"constraints":[{"code":"Input","type":"codeVoice"},{"text":" is ","type":"text"},{"code":"Substring.UTF8View","type":"codeVoice"},{"text":".","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}]},"identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Rest\/init()-3wugv","role":"symbol","abstract":[],"type":"topic"},"doc://co.pointfree.URLRouting/documentation/Parsing/Rest/init()-41jf5":{"identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Rest\/init()-41jf5","role":"symbol","kind":"symbol","abstract":[],"title":"init()","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"()"}],"type":"topic","url":"\/documentation\/parsing\/rest\/init()-41jf5","conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"type":"codeVoice","code":"Input"},{"type":"text","text":" is "},{"type":"codeVoice","code":"Substring"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}]}},"doc://co.pointfree.URLRouting/documentation/Parsing/Rest/parse(_:)":{"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"parse"},{"kind":"text","text":"("},{"kind":"keyword","text":"inout"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"text":" -> ","kind":"text"},{"text":"Input","kind":"typeIdentifier"}],"role":"symbol","kind":"symbol","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Rest\/parse(_:)","type":"topic","title":"parse(_:)","url":"\/documentation\/parsing\/rest\/parse(_:)","abstract":[{"type":"text","text":"Attempts to parse a nebulous piece of data into something more well-structured. Typically"},{"type":"text","text":" "},{"type":"text","text":"you only call this from other "},{"type":"codeVoice","code":"Parser"},{"type":"text","text":" conformances, not when you want to parse a concrete"},{"type":"text","text":" "},{"type":"text","text":"input."}]},"doc://co.pointfree.URLRouting/documentation/Parsing/Optionally":{"identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Optionally","url":"\/documentation\/parsing\/optionally","role":"symbol","type":"topic","navigatorTitle":[{"text":"Optionally","kind":"identifier"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Optionally","kind":"identifier"}],"kind":"symbol","abstract":[{"type":"text","text":"A parser that runs the given parser and succeeds with "},{"type":"codeVoice","code":"nil"},{"type":"text","text":" if it fails."}],"title":"Optionally"},"doc://co.pointfree.URLRouting/documentation/Parsing/Parser":{"kind":"symbol","abstract":[{"text":"Declares a type that can incrementally parse an ","type":"text"},{"code":"Output","type":"codeVoice"},{"text":" value from an ","type":"text"},{"code":"Input","type":"codeVoice"},{"text":" value.","type":"text"}],"type":"topic","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Parser","url":"\/documentation\/parsing\/parser","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Parser","kind":"identifier"}],"role":"symbol","navigatorTitle":[{"text":"Parser","kind":"identifier"}],"title":"Parser"},"doc://co.pointfree.URLRouting/documentation/Parsing/Rest/init()-9bc09":{"url":"\/documentation\/parsing\/rest\/init()-9bc09","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"()"}],"title":"init()","kind":"symbol","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Rest\/init()-9bc09","role":"symbol","abstract":[],"type":"topic"},"doc://co.pointfree.URLRouting/documentation/Parsing/Rest/ParserPrinter-Implementations":{"title":"ParserPrinter Implementations","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Rest\/ParserPrinter-Implementations","kind":"article","role":"collectionGroup","url":"\/documentation\/parsing\/rest\/parserprinter-implementations","type":"topic","abstract":[]},"doc://co.pointfree.URLRouting/documentation/Parsing/Rest":{"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Rest"}],"title":"Rest","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Rest","kind":"symbol","role":"symbol","url":"\/documentation\/parsing\/rest","navigatorTitle":[{"kind":"identifier","text":"Rest"}],"type":"topic","abstract":[{"text":"A parser that consumes everything to the end of the collection and returns this subsequence as","type":"text"},{"text":" ","type":"text"},{"text":"its output.","type":"text"}]},"doc://co.pointfree.URLRouting/documentation/Parsing/Rest/Parser-Implementations":{"type":"topic","abstract":[],"role":"collectionGroup","kind":"article","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Rest\/Parser-Implementations","url":"\/documentation\/parsing\/rest\/parser-implementations","title":"Parser Implementations"},"doc://co.pointfree.URLRouting/documentation/Parsing/Rest/replaceError(with:)":{"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"replaceError"},{"kind":"text","text":"("},{"kind":"externalParam","text":"with"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Output"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:7Parsing7ParsersO","text":"Parsers"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:7Parsing7ParsersO12ReplaceErrorV","text":"ReplaceError"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":">"}],"type":"topic","kind":"symbol","abstract":[{"type":"text","text":"A parser that replaces its error with a provided output."}],"title":"replaceError(with:)","url":"\/documentation\/parsing\/rest\/replaceerror(with:)","role":"symbol","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Rest\/replaceError(with:)"},"doc://co.pointfree.URLRouting/documentation/Parsing":{"kind":"symbol","abstract":[],"type":"topic","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing","url":"\/documentation\/parsing","role":"collection","title":"Parsing"}}}