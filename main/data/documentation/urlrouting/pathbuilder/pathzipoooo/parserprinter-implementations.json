{"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/urlrouting\/pathbuilder\/pathzipoooo\/parserprinter-implementations"]}],"sections":[],"topicSections":[{"generated":true,"title":"Instance Methods","identifiers":["doc:\/\/co.pointfree.URLRouting\/documentation\/URLRouting\/PathBuilder\/PathZipOOOO\/baseRequestData(_:)","doc:\/\/co.pointfree.URLRouting\/documentation\/URLRouting\/PathBuilder\/PathZipOOOO\/baseURL(_:)","doc:\/\/co.pointfree.URLRouting\/documentation\/URLRouting\/PathBuilder\/PathZipOOOO\/eraseToAnyParserPrinter()","doc:\/\/co.pointfree.URLRouting\/documentation\/URLRouting\/PathBuilder\/PathZipOOOO\/path(for:)","doc:\/\/co.pointfree.URLRouting\/documentation\/URLRouting\/PathBuilder\/PathZipOOOO\/print(_:)","doc:\/\/co.pointfree.URLRouting\/documentation\/URLRouting\/PathBuilder\/PathZipOOOO\/print(_:into:)","doc:\/\/co.pointfree.URLRouting\/documentation\/URLRouting\/PathBuilder\/PathZipOOOO\/request(for:)","doc:\/\/co.pointfree.URLRouting\/documentation\/URLRouting\/PathBuilder\/PathZipOOOO\/url(for:)"]}],"kind":"article","identifier":{"interfaceLanguage":"swift","url":"doc:\/\/co.pointfree.URLRouting\/documentation\/URLRouting\/PathBuilder\/PathZipOOOO\/ParserPrinter-Implementations"},"schemaVersion":{"patch":0,"minor":3,"major":0},"metadata":{"modules":[{"name":"URLRouting"}],"title":"ParserPrinter Implementations","role":"collectionGroup"},"hierarchy":{"paths":[["doc:\/\/co.pointfree.URLRouting\/documentation\/URLRouting","doc:\/\/co.pointfree.URLRouting\/documentation\/URLRouting\/PathBuilder","doc:\/\/co.pointfree.URLRouting\/documentation\/URLRouting\/PathBuilder\/PathZipOOOO"]]},"references":{"doc://co.pointfree.URLRouting/documentation/URLRouting/PathBuilder/PathZipOOOO/baseURL(_:)":{"kind":"symbol","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/URLRouting\/PathBuilder\/PathZipOOOO\/baseURL(_:)","title":"baseURL(_:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"baseURL","kind":"identifier"},{"text":"(","kind":"text"},{"text":"String","preciseIdentifier":"s:SS","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"BaseURLPrinter","preciseIdentifier":"s:10URLRouting14BaseURLPrinterV","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":">","kind":"text"}],"conformance":{"constraints":[{"type":"codeVoice","code":"Input"},{"type":"text","text":" is "},{"type":"codeVoice","code":"URLRequestData"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"url":"\/documentation\/urlrouting\/pathbuilder\/pathzipoooo\/baseurl(_:)","abstract":[{"text":"Prepends a router with a base URL for the purpose of printing.","type":"text"}],"type":"topic","role":"symbol"},"doc://co.pointfree.URLRouting/documentation/URLRouting/PathBuilder/PathZipOOOO":{"url":"\/documentation\/urlrouting\/pathbuilder\/pathzipoooo","kind":"symbol","role":"symbol","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/URLRouting\/PathBuilder\/PathZipOOOO","navigatorTitle":[{"kind":"identifier","text":"PathZipOOOO"}],"abstract":[],"title":"PathBuilder.PathZipOOOO","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"PathZipOOOO"}],"type":"topic"},"doc://co.pointfree.URLRouting/documentation/URLRouting/PathBuilder/PathZipOOOO/request(for:)":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"request","kind":"identifier"},{"text":"(","kind":"text"},{"text":"for","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Output","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"URLRequest","preciseIdentifier":"s:20FoundationNetworking10URLRequestV"}],"type":"topic","kind":"symbol","url":"\/documentation\/urlrouting\/pathbuilder\/pathzipoooo\/request(for:)","abstract":[],"conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"code":"Input","type":"codeVoice"},{"text":" is ","type":"text"},{"code":"URLRequestData","type":"codeVoice"},{"text":".","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}]},"role":"symbol","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/URLRouting\/PathBuilder\/PathZipOOOO\/request(for:)","title":"request(for:)"},"doc://co.pointfree.URLRouting/documentation/URLRouting/PathBuilder/PathZipOOOO/eraseToAnyParserPrinter()":{"url":"\/documentation\/urlrouting\/pathbuilder\/pathzipoooo\/erasetoanyparserprinter()","kind":"symbol","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/URLRouting\/PathBuilder\/PathZipOOOO\/eraseToAnyParserPrinter()","abstract":[{"text":"Wraps this parser with a type eraser.","type":"text"}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"eraseToAnyParserPrinter","kind":"identifier"},{"text":"() -> ","kind":"text"},{"preciseIdentifier":"s:7Parsing16AnyParserPrinterV","text":"AnyParserPrinter","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Input","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"kind":"typeIdentifier","text":"Output"},{"kind":"text","text":">"}],"role":"symbol","type":"topic","title":"eraseToAnyParserPrinter()"},"http://github.com/pointfreeco/swift-parsing":{"type":"link","identifier":"http:\/\/github.com\/pointfreeco\/swift-parsing","title":"Parsing","url":"http:\/\/github.com\/pointfreeco\/swift-parsing","titleInlineContent":[{"type":"text","text":"Parsing"}]},"doc://co.pointfree.URLRouting/documentation/URLRouting":{"identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/URLRouting","role":"collection","title":"URLRouting","type":"topic","abstract":[{"text":"A bidirectional URL router with more type safety and less fuss. This library is built with ","type":"text"},{"type":"reference","identifier":"http:\/\/github.com\/pointfreeco\/swift-parsing","isActive":true},{"text":".","type":"text"}],"kind":"symbol","url":"\/documentation\/urlrouting"},"doc://co.pointfree.URLRouting/documentation/URLRouting/PathBuilder/PathZipOOOO/print(_:into:)":{"conformance":{"constraints":[{"type":"codeVoice","code":"P0"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"ParserPrinter"},{"type":"text","text":", "},{"type":"codeVoice","code":"P1"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"ParserPrinter"},{"type":"text","text":", "},{"type":"codeVoice","code":"P2"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"ParserPrinter"},{"type":"text","text":", "},{"type":"codeVoice","code":"P3"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"ParserPrinter"},{"type":"text","text":", "},{"type":"codeVoice","code":"P0.Input"},{"type":"text","text":" is "},{"type":"codeVoice","code":"Substring"},{"type":"text","text":", "},{"type":"codeVoice","code":"P1.Input"},{"type":"text","text":" is "},{"type":"codeVoice","code":"Substring"},{"type":"text","text":", "},{"type":"codeVoice","code":"P2.Input"},{"type":"text","text":" is "},{"type":"codeVoice","code":"Substring"},{"type":"text","text":", and "},{"type":"codeVoice","code":"P3.Input"},{"type":"text","text":" is "},{"type":"codeVoice","code":"Substring"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"print"},{"kind":"text","text":"(("},{"kind":"typeIdentifier","text":"P0"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Output"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"P1"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Output"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"P2"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Output"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"P3"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Output"},{"kind":"text","text":"), "},{"kind":"externalParam","text":"into"},{"kind":"text","text":": "},{"kind":"keyword","text":"inout"},{"kind":"text","text":" "},{"kind":"typeIdentifier","preciseIdentifier":"s:10URLRouting14URLRequestDataV","text":"URLRequestData"},{"kind":"text","text":") "},{"kind":"keyword","text":"rethrows"}],"url":"\/documentation\/urlrouting\/pathbuilder\/pathzipoooo\/print(_:into:)","abstract":[{"text":"Attempts to print a well-structured piece of data into something more nebulous.","type":"text"}],"kind":"symbol","type":"topic","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/URLRouting\/PathBuilder\/PathZipOOOO\/print(_:into:)","title":"print(_:into:)","role":"symbol"},"doc://co.pointfree.URLRouting/documentation/URLRouting/PathBuilder/PathZipOOOO/baseRequestData(_:)":{"url":"\/documentation\/urlrouting\/pathbuilder\/pathzipoooo\/baserequestdata(_:)","title":"baseRequestData(_:)","kind":"symbol","role":"symbol","conformance":{"constraints":[{"code":"Input","type":"codeVoice"},{"type":"text","text":" is "},{"code":"URLRequestData","type":"codeVoice"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"type":"topic","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/URLRouting\/PathBuilder\/PathZipOOOO\/baseRequestData(_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"baseRequestData"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"URLRequestData","preciseIdentifier":"s:10URLRouting14URLRequestDataV"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"BaseURLPrinter","preciseIdentifier":"s:10URLRouting14BaseURLPrinterV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":">"}],"abstract":[{"text":"Prepends a router with default request data for the purpose of printing.","type":"text"}]},"doc://co.pointfree.URLRouting/documentation/URLRouting/PathBuilder":{"identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/URLRouting\/PathBuilder","role":"symbol","title":"PathBuilder","navigatorTitle":[{"text":"PathBuilder","kind":"identifier"}],"type":"topic","abstract":[{"text":"A custom parameter attribute that constructs path component parsers from closures. The","type":"text"},{"text":" ","type":"text"},{"text":"constructed parser runs a number of parsers against each patch component, one after the other,","type":"text"},{"text":" ","type":"text"},{"text":"and accumulates their outputs.","type":"text"}],"kind":"symbol","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"PathBuilder","kind":"identifier"}],"url":"\/documentation\/urlrouting\/pathbuilder"},"doc://co.pointfree.URLRouting/documentation/URLRouting/PathBuilder/PathZipOOOO/url(for:)":{"abstract":[],"type":"topic","conformance":{"constraints":[{"code":"Input","type":"codeVoice"},{"text":" is ","type":"text"},{"code":"URLRequestData","type":"codeVoice"},{"text":".","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}]},"role":"symbol","title":"url(for:)","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/URLRouting\/PathBuilder\/PathZipOOOO\/url(for:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"url","kind":"identifier"},{"text":"(","kind":"text"},{"text":"for","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Output","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"URL","preciseIdentifier":"s:10Foundation3URLV","kind":"typeIdentifier"}],"url":"\/documentation\/urlrouting\/pathbuilder\/pathzipoooo\/url(for:)","kind":"symbol"},"doc://co.pointfree.URLRouting/documentation/URLRouting/PathBuilder/PathZipOOOO/path(for:)":{"kind":"symbol","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/URLRouting\/PathBuilder\/PathZipOOOO\/path(for:)","abstract":[],"type":"topic","title":"path(for:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"path"},{"kind":"text","text":"("},{"kind":"externalParam","text":"for"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Output"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"}],"url":"\/documentation\/urlrouting\/pathbuilder\/pathzipoooo\/path(for:)","conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}],"constraints":[{"code":"Input","type":"codeVoice"},{"text":" is ","type":"text"},{"code":"URLRequestData","type":"codeVoice"},{"text":".","type":"text"}]},"role":"symbol"},"doc://co.pointfree.URLRouting/documentation/URLRouting/PathBuilder/PathZipOOOO/print(_:)":{"kind":"symbol","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/URLRouting\/PathBuilder\/PathZipOOOO\/print(_:)","abstract":[{"type":"text","text":"Attempts to print a well-structured piece of data to something more nebulous."}],"type":"topic","title":"print(_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"print"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Output"},{"kind":"text","text":") "},{"kind":"keyword","text":"rethrows"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Input"}],"url":"\/documentation\/urlrouting\/pathbuilder\/pathzipoooo\/print(_:)","conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"type":"codeVoice","code":"Input"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"_EmptyInitializable"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}]},"role":"symbol"}}}