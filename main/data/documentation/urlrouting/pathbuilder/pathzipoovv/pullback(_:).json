{"sections":[],"abstract":[{"type":"text","text":"Transforms the "},{"code":"Input","type":"codeVoice"},{"type":"text","text":" of a parser."}],"variants":[{"paths":["\/documentation\/urlrouting\/pathbuilder\/pathzipoovv\/pullback(_:)"],"traits":[{"interfaceLanguage":"swift"}]}],"hierarchy":{"paths":[["doc:\/\/co.pointfree.URLRouting\/documentation\/URLRouting","doc:\/\/co.pointfree.URLRouting\/documentation\/URLRouting\/PathBuilder","doc:\/\/co.pointfree.URLRouting\/documentation\/URLRouting\/PathBuilder\/PathZipOOVV","doc:\/\/co.pointfree.URLRouting\/documentation\/URLRouting\/PathBuilder\/PathZipOOVV\/Parser-Implementations"]]},"metadata":{"externalID":"s:7Parsing6ParserPAAE8pullbackyAA7ParsersO8PullbackVy_xqd__Gs15WritableKeyPathCyqd__5InputQzGlF::SYNTHESIZED::s:10URLRouting11PathBuilderO0B7ZipOOVVV","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"pullback"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"NewInput"},{"kind":"text","text":">("},{"preciseIdentifier":"s:s15WritableKeyPathC","text":"WritableKeyPath","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"NewInput","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Input","kind":"typeIdentifier"},{"text":">) -> ","kind":"text"},{"preciseIdentifier":"s:7Parsing7ParsersO","text":"Parsers","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:7Parsing7ParsersO8PullbackV","text":"Pullback","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"NewInput","kind":"typeIdentifier"},{"text":">","kind":"text"}],"extendedModule":"Parsing","symbolKind":"method","title":"pullback(_:)","modules":[{"name":"URLRouting"}],"role":"symbol","roleHeading":"Instance Method"},"kind":"symbol","primaryContentSections":[{"declarations":[{"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"pullback"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"NewInput"},{"kind":"text","text":">("},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"keyPath"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:s15WritableKeyPathC","text":"WritableKeyPath"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"NewInput"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":">) -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:7Parsing7ParsersO","text":"Parsers","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Parsers"},{"kind":"text","text":"."},{"preciseIdentifier":"s:7Parsing7ParsersO8PullbackV","text":"Pullback","kind":"typeIdentifier","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Parsers\/Pullback"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"NewInput","kind":"typeIdentifier"},{"text":">","kind":"text"}],"languages":["swift"],"platforms":["Linux"]}],"kind":"declarations"},{"content":[{"anchor":"return-value","level":2,"type":"heading","text":"Return Value"},{"inlineContent":[{"type":"text","text":"A parser that parses new input."}],"type":"paragraph"}],"kind":"content"},{"kind":"parameters","parameters":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"A key path to pull parsing back along from this parser’s input to a new"},{"type":"text","text":" "},{"type":"text","text":"input."}]}],"name":"keyPath"}]},{"content":[{"text":"Discussion","level":2,"type":"heading","anchor":"discussion"},{"inlineContent":[{"text":"This operator allows you to transform a parser of ","type":"text"},{"type":"codeVoice","code":"Input"},{"text":"s into one on ","type":"text"},{"type":"codeVoice","code":"NewInput"},{"text":"s, via a","type":"text"},{"text":" ","type":"text"},{"text":"writable key path from ","type":"text"},{"type":"codeVoice","code":"NewInput"},{"text":" to ","type":"text"},{"type":"codeVoice","code":"Input"},{"text":". Intuitively you can think of this as a way of","type":"text"},{"text":" ","type":"text"},{"text":"transforming a parser on local data into one on more global data.","type":"text"}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"For example, the parser "},{"type":"codeVoice","code":"Int.parser()"},{"type":"text","text":" parses "},{"type":"codeVoice","code":"Substring.UTF8View"},{"type":"text","text":" collections into integers,"},{"type":"text","text":" "},{"type":"text","text":"and there’s a key path from "},{"type":"codeVoice","code":"Substring.UTF8View"},{"type":"text","text":" to "},{"type":"codeVoice","code":"Substring"},{"type":"text","text":", and so we can "},{"type":"codeVoice","code":"pullback"},{"type":"text","text":":"}],"type":"paragraph"},{"syntax":"swift","type":"codeListing","code":["var input = \"123 Hello world\"[...]","let output = try Int.parser().pullback(\\.utf8).parse(&input)  \/\/ 123","input                                                         \/\/ \" Hello world\""]},{"inlineContent":[{"text":"This has allowed us to parse ","type":"text"},{"code":"Substring","type":"codeVoice"},{"text":"s with something that is only defined on","type":"text"},{"text":" ","type":"text"},{"code":"Substring.UTF8View","type":"codeVoice"},{"text":".","type":"text"}],"type":"paragraph"}],"kind":"content"}],"schemaVersion":{"major":0,"minor":3,"patch":0},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/co.pointfree.URLRouting\/documentation\/URLRouting\/PathBuilder\/PathZipOOVV\/pullback(_:)"},"references":{"doc://co.pointfree.URLRouting/documentation/URLRouting/PathBuilder":{"identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/URLRouting\/PathBuilder","role":"symbol","title":"PathBuilder","navigatorTitle":[{"text":"PathBuilder","kind":"identifier"}],"type":"topic","abstract":[{"text":"A custom parameter attribute that constructs path component parsers from closures. The","type":"text"},{"text":" ","type":"text"},{"text":"constructed parser runs a number of parsers against each patch component, one after the other,","type":"text"},{"text":" ","type":"text"},{"text":"and accumulates their outputs.","type":"text"}],"kind":"symbol","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"PathBuilder","kind":"identifier"}],"url":"\/documentation\/urlrouting\/pathbuilder"},"doc://co.pointfree.URLRouting/documentation/URLRouting/PathBuilder/PathZipOOVV":{"title":"PathBuilder.PathZipOOVV","url":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovv","type":"topic","kind":"symbol","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/URLRouting\/PathBuilder\/PathZipOOVV","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"PathZipOOVV"}],"navigatorTitle":[{"kind":"identifier","text":"PathZipOOVV"}],"role":"symbol","abstract":[]},"doc://co.pointfree.URLRouting/documentation/Parsing/Parsers":{"kind":"symbol","abstract":[{"text":"A namespace for types that serve as parsers.","type":"text"}],"type":"topic","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Parsers","url":"\/documentation\/parsing\/parsers","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Parsers","kind":"identifier"}],"role":"symbol","navigatorTitle":[{"text":"Parsers","kind":"identifier"}],"title":"Parsers"},"doc://co.pointfree.URLRouting/documentation/URLRouting/PathBuilder/PathZipOOVV/Parser-Implementations":{"type":"topic","role":"collectionGroup","title":"Parser Implementations","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/URLRouting\/PathBuilder\/PathZipOOVV\/Parser-Implementations","url":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovv\/parser-implementations","abstract":[],"kind":"article"},"doc://co.pointfree.URLRouting/documentation/Parsing/Parsers/Pullback":{"kind":"symbol","abstract":[{"type":"text","text":"Transforms the "},{"type":"codeVoice","code":"Input"},{"type":"text","text":" of a downstream parser."}],"type":"topic","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Parsers\/Pullback","title":"Parsers.Pullback","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Pullback","kind":"identifier"}],"url":"\/documentation\/parsing\/parsers\/pullback","navigatorTitle":[{"text":"Pullback","kind":"identifier"}],"role":"symbol"},"http://github.com/pointfreeco/swift-parsing":{"type":"link","url":"http:\/\/github.com\/pointfreeco\/swift-parsing","titleInlineContent":[{"type":"text","text":"Parsing"}],"title":"Parsing","identifier":"http:\/\/github.com\/pointfreeco\/swift-parsing"},"doc://co.pointfree.URLRouting/documentation/URLRouting":{"identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/URLRouting","role":"collection","title":"URLRouting","type":"topic","abstract":[{"text":"A bidirectional URL router with more type safety and less fuss. This library is built with ","type":"text"},{"type":"reference","identifier":"http:\/\/github.com\/pointfreeco\/swift-parsing","isActive":true},{"text":".","type":"text"}],"kind":"symbol","url":"\/documentation\/urlrouting"},"doc://co.pointfree.URLRouting/documentation/URLRouting/PathBuilder/PathZipOOVV/pullback(_:)":{"abstract":[{"type":"text","text":"Transforms the "},{"code":"Input","type":"codeVoice"},{"type":"text","text":" of a parser."}],"url":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovv\/pullback(_:)","type":"topic","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"pullback","kind":"identifier"},{"text":"<","kind":"text"},{"text":"NewInput","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"WritableKeyPath","kind":"typeIdentifier","preciseIdentifier":"s:s15WritableKeyPathC"},{"text":"<","kind":"text"},{"text":"NewInput","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":">) -> "},{"kind":"typeIdentifier","text":"Parsers","preciseIdentifier":"s:7Parsing7ParsersO"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Pullback","preciseIdentifier":"s:7Parsing7ParsersO8PullbackV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"text":", ","kind":"text"},{"text":"NewInput","kind":"typeIdentifier"},{"text":">","kind":"text"}],"title":"pullback(_:)","kind":"symbol","role":"symbol","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/URLRouting\/PathBuilder\/PathZipOOVV\/pullback(_:)"}}}