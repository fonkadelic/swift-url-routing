{"hierarchy":{"paths":[["doc:\/\/co.pointfree.URLRouting\/documentation\/URLRouting","doc:\/\/co.pointfree.URLRouting\/documentation\/URLRouting\/PathBuilder","doc:\/\/co.pointfree.URLRouting\/documentation\/URLRouting\/PathBuilder\/PathZipVOVVVO","doc:\/\/co.pointfree.URLRouting\/documentation\/URLRouting\/PathBuilder\/PathZipVOVVVO\/Parser-Implementations"]]},"sections":[],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/urlrouting\/pathbuilder\/pathzipvovvvo\/erasetoanyparser()"]}],"kind":"symbol","schemaVersion":{"major":0,"patch":0,"minor":3},"abstract":[{"text":"Wraps this parser with a type eraser.","type":"text"}],"metadata":{"extendedModule":"Parsing","roleHeading":"Instance Method","externalID":"s:7Parsing6ParserPAAE010eraseToAnyB0AA0eB0Vy5InputQz6OutputQzGyF::SYNTHESIZED::s:10URLRouting11PathBuilderO0B9ZipVOVVVOV","role":"symbol","symbolKind":"method","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"eraseToAnyParser"},{"kind":"text","text":"() -> "},{"preciseIdentifier":"s:7Parsing9AnyParserV","kind":"typeIdentifier","text":"AnyParser"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Output"},{"kind":"text","text":">"}],"modules":[{"name":"URLRouting"}],"title":"eraseToAnyParser()"},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/co.pointfree.URLRouting\/documentation\/URLRouting\/PathBuilder\/PathZipVOVVVO\/eraseToAnyParser()"},"primaryContentSections":[{"declarations":[{"platforms":["Linux"],"languages":["swift"],"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"eraseToAnyParser"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/AnyParser","preciseIdentifier":"s:7Parsing9AnyParserV","text":"AnyParser"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Output"},{"kind":"text","text":">"}]}],"kind":"declarations"},{"content":[{"anchor":"return-value","type":"heading","level":2,"text":"Return Value"},{"type":"paragraph","inlineContent":[{"text":"An ","type":"text"},{"code":"AnyParser","type":"codeVoice"},{"text":" wrapping this parser.","type":"text"}]}],"kind":"content"},{"content":[{"level":2,"text":"Discussion","type":"heading","anchor":"discussion"},{"inlineContent":[{"type":"text","text":"This form of "},{"inlineContent":[{"text":"type erasure","type":"text"}],"type":"emphasis"},{"type":"text","text":" preserves abstraction across API boundaries, such as different"},{"type":"text","text":" "},{"type":"text","text":"modules."}],"type":"paragraph"},{"inlineContent":[{"text":"When you expose your composed parsers as the ","type":"text"},{"type":"codeVoice","code":"AnyParser"},{"text":" type, you can change the underlying","type":"text"},{"text":" ","type":"text"},{"text":"implementation over time without affecting existing clients.","type":"text"}],"type":"paragraph"},{"inlineContent":[{"text":"Equivalent to passing ","type":"text"},{"code":"self","type":"codeVoice"},{"text":" to ","type":"text"},{"code":"AnyParser.init","type":"codeVoice"},{"text":".","type":"text"}],"type":"paragraph"}],"kind":"content"}],"references":{"doc://co.pointfree.URLRouting/documentation/URLRouting/PathBuilder":{"identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/URLRouting\/PathBuilder","role":"symbol","title":"PathBuilder","navigatorTitle":[{"text":"PathBuilder","kind":"identifier"}],"type":"topic","abstract":[{"text":"A custom parameter attribute that constructs path component parsers from closures. The","type":"text"},{"text":" ","type":"text"},{"text":"constructed parser runs a number of parsers against each patch component, one after the other,","type":"text"},{"text":" ","type":"text"},{"text":"and accumulates their outputs.","type":"text"}],"kind":"symbol","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"PathBuilder","kind":"identifier"}],"url":"\/documentation\/urlrouting\/pathbuilder"},"doc://co.pointfree.URLRouting/documentation/Parsing/AnyParser":{"fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"AnyParser","kind":"identifier"}],"title":"AnyParser","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/AnyParser","kind":"symbol","role":"symbol","url":"\/documentation\/parsing\/anyparser","navigatorTitle":[{"text":"AnyParser","kind":"identifier"}],"type":"topic","abstract":[{"text":"A type-erased parser of ","type":"text"},{"code":"Output","type":"codeVoice"},{"text":" from ","type":"text"},{"code":"Input","type":"codeVoice"},{"text":".","type":"text"}]},"doc://co.pointfree.URLRouting/documentation/URLRouting/PathBuilder/PathZipVOVVVO":{"navigatorTitle":[{"kind":"identifier","text":"PathZipVOVVVO"}],"type":"topic","role":"symbol","title":"PathBuilder.PathZipVOVVVO","url":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovvvo","kind":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"PathZipVOVVVO"}],"identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/URLRouting\/PathBuilder\/PathZipVOVVVO","abstract":[]},"doc://co.pointfree.URLRouting/documentation/URLRouting/PathBuilder/PathZipVOVVVO/eraseToAnyParser()":{"role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"eraseToAnyParser"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:7Parsing9AnyParserV","text":"AnyParser"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Output"},{"kind":"text","text":">"}],"title":"eraseToAnyParser()","abstract":[{"type":"text","text":"Wraps this parser with a type eraser."}],"identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/URLRouting\/PathBuilder\/PathZipVOVVVO\/eraseToAnyParser()","type":"topic","url":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovvvo\/erasetoanyparser()","kind":"symbol"},"doc://co.pointfree.URLRouting/documentation/URLRouting/PathBuilder/PathZipVOVVVO/Parser-Implementations":{"type":"topic","role":"collectionGroup","title":"Parser Implementations","url":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovvvo\/parser-implementations","kind":"article","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/URLRouting\/PathBuilder\/PathZipVOVVVO\/Parser-Implementations","abstract":[]},"http://github.com/pointfreeco/swift-parsing":{"title":"Parsing","titleInlineContent":[{"text":"Parsing","type":"text"}],"type":"link","identifier":"http:\/\/github.com\/pointfreeco\/swift-parsing","url":"http:\/\/github.com\/pointfreeco\/swift-parsing"},"doc://co.pointfree.URLRouting/documentation/URLRouting":{"identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/URLRouting","role":"collection","title":"URLRouting","type":"topic","abstract":[{"text":"A bidirectional URL router with more type safety and less fuss. This library is built with ","type":"text"},{"type":"reference","identifier":"http:\/\/github.com\/pointfreeco\/swift-parsing","isActive":true},{"text":".","type":"text"}],"kind":"symbol","url":"\/documentation\/urlrouting"}}}