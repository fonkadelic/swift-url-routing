{"abstract":[{"type":"text","text":"Inherited from "},{"code":"ParserPrinter.url(for:)","type":"codeVoice"},{"type":"text","text":"."}],"kind":"symbol","hierarchy":{"paths":[["doc:\/\/co.pointfree.URLRouting\/documentation\/URLRouting","doc:\/\/co.pointfree.URLRouting\/documentation\/URLRouting\/PathBuilder","doc:\/\/co.pointfree.URLRouting\/documentation\/URLRouting\/PathBuilder\/PathZipVVVOV","doc:\/\/co.pointfree.URLRouting\/documentation\/URLRouting\/PathBuilder\/PathZipVVVOV\/ParserPrinter-Implementations"]]},"primaryContentSections":[{"declarations":[{"languages":["swift"],"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"url"},{"kind":"text","text":"("},{"kind":"externalParam","text":"for"},{"kind":"text","text":" "},{"kind":"internalParam","text":"route"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Output","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:10Foundation3URLV","text":"URL","kind":"typeIdentifier"}],"platforms":["Linux"]}],"kind":"declarations"}],"metadata":{"symbolKind":"method","extendedModule":"Parsing","externalID":"s:7Parsing13ParserPrinterP10URLRoutingAD14URLRequestDataV5InputRtzrlE3url3for10Foundation3URLV6OutputQz_tF::SYNTHESIZED::s:10URLRouting11PathBuilderO0B8ZipVVVOVV","conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"type":"codeVoice","code":"Input"},{"type":"text","text":" is "},{"type":"codeVoice","code":"URLRequestData"},{"type":"text","text":"."}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"modules":[{"name":"URLRouting"}],"roleHeading":"Instance Method","title":"url(for:)","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"url"},{"kind":"text","text":"("},{"kind":"externalParam","text":"for"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"text":"Output","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"URL","kind":"typeIdentifier","preciseIdentifier":"s:10Foundation3URLV"}],"role":"symbol"},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/co.pointfree.URLRouting\/documentation\/URLRouting\/PathBuilder\/PathZipVVVOV\/url(for:)"},"sections":[],"schemaVersion":{"patch":0,"minor":3,"major":0},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/urlrouting\/pathbuilder\/pathzipvvvov\/url(for:)"]}],"references":{"doc://co.pointfree.URLRouting/documentation/URLRouting/PathBuilder/PathZipVVVOV/ParserPrinter-Implementations":{"abstract":[],"identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/URLRouting\/PathBuilder\/PathZipVVVOV\/ParserPrinter-Implementations","role":"collectionGroup","url":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvov\/parserprinter-implementations","kind":"article","type":"topic","title":"ParserPrinter Implementations"},"doc://co.pointfree.URLRouting/documentation/URLRouting":{"identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/URLRouting","role":"collection","title":"URLRouting","type":"topic","abstract":[{"text":"A bidirectional URL router with more type safety and less fuss. This library is built with ","type":"text"},{"type":"reference","identifier":"http:\/\/github.com\/pointfreeco\/swift-parsing","isActive":true},{"text":".","type":"text"}],"kind":"symbol","url":"\/documentation\/urlrouting"},"http://github.com/pointfreeco/swift-parsing":{"title":"Parsing","identifier":"http:\/\/github.com\/pointfreeco\/swift-parsing","type":"link","titleInlineContent":[{"type":"text","text":"Parsing"}],"url":"http:\/\/github.com\/pointfreeco\/swift-parsing"},"doc://co.pointfree.URLRouting/documentation/URLRouting/PathBuilder":{"identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/URLRouting\/PathBuilder","role":"symbol","title":"PathBuilder","navigatorTitle":[{"text":"PathBuilder","kind":"identifier"}],"type":"topic","abstract":[{"text":"A custom parameter attribute that constructs path component parsers from closures. The","type":"text"},{"text":" ","type":"text"},{"text":"constructed parser runs a number of parsers against each patch component, one after the other,","type":"text"},{"text":" ","type":"text"},{"text":"and accumulates their outputs.","type":"text"}],"kind":"symbol","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"PathBuilder","kind":"identifier"}],"url":"\/documentation\/urlrouting\/pathbuilder"},"doc://co.pointfree.URLRouting/documentation/URLRouting/PathBuilder/PathZipVVVOV/url(for:)":{"identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/URLRouting\/PathBuilder\/PathZipVVVOV\/url(for:)","role":"symbol","abstract":[],"title":"url(for:)","url":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvov\/url(for:)","kind":"symbol","conformance":{"constraints":[{"code":"Input","type":"codeVoice"},{"type":"text","text":" is "},{"code":"URLRequestData","type":"codeVoice"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"type":"topic","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"url","kind":"identifier"},{"text":"(","kind":"text"},{"text":"for","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Output","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"URL","preciseIdentifier":"s:10Foundation3URLV","kind":"typeIdentifier"}]},"doc://co.pointfree.URLRouting/documentation/URLRouting/PathBuilder/PathZipVVVOV":{"abstract":[],"identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/URLRouting\/PathBuilder\/PathZipVVVOV","type":"topic","kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"PathZipVVVOV"}],"url":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvov","navigatorTitle":[{"kind":"identifier","text":"PathZipVVVOV"}],"role":"symbol","title":"PathBuilder.PathZipVVVOV"}}}