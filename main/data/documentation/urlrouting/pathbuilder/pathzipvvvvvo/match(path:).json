{"kind":"symbol","identifier":{"url":"doc:\/\/co.pointfree.URLRouting\/documentation\/URLRouting\/PathBuilder\/PathZipVVVVVO\/match(path:)","interfaceLanguage":"swift"},"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["Linux"],"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"match","kind":"identifier"},{"text":"(","kind":"text"},{"text":"path","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"String","preciseIdentifier":"s:SS","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Output"}],"languages":["swift"]}]}],"abstract":[{"text":"Inherited from ","type":"text"},{"type":"codeVoice","code":"Parser.match(path:)"},{"text":".","type":"text"}],"schemaVersion":{"minor":3,"patch":0,"major":0},"sections":[],"hierarchy":{"paths":[["doc:\/\/co.pointfree.URLRouting\/documentation\/URLRouting","doc:\/\/co.pointfree.URLRouting\/documentation\/URLRouting\/PathBuilder","doc:\/\/co.pointfree.URLRouting\/documentation\/URLRouting\/PathBuilder\/PathZipVVVVVO","doc:\/\/co.pointfree.URLRouting\/documentation\/URLRouting\/PathBuilder\/PathZipVVVVVO\/Parser-Implementations"]]},"variants":[{"paths":["\/documentation\/urlrouting\/pathbuilder\/pathzipvvvvvo\/match(path:)"],"traits":[{"interfaceLanguage":"swift"}]}],"metadata":{"extendedModule":"Parsing","role":"symbol","title":"match(path:)","roleHeading":"Instance Method","modules":[{"name":"URLRouting"}],"symbolKind":"method","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"match","kind":"identifier"},{"text":"(","kind":"text"},{"text":"path","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"String","preciseIdentifier":"s:SS","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Output","kind":"typeIdentifier"}],"conformance":{"constraints":[{"type":"codeVoice","code":"Input"},{"text":" is ","type":"text"},{"type":"codeVoice","code":"URLRequestData"},{"text":".","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}]},"externalID":"s:7Parsing6ParserP10URLRoutingAD14URLRequestDataV5InputRtzrlE5match4path6OutputQzSS_tKF::SYNTHESIZED::s:10URLRouting11PathBuilderO0B9ZipVVVVVOV"},"references":{"http://github.com/pointfreeco/swift-parsing":{"type":"link","titleInlineContent":[{"text":"Parsing","type":"text"}],"title":"Parsing","url":"http:\/\/github.com\/pointfreeco\/swift-parsing","identifier":"http:\/\/github.com\/pointfreeco\/swift-parsing"},"doc://co.pointfree.URLRouting/documentation/URLRouting":{"identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/URLRouting","role":"collection","title":"URLRouting","type":"topic","abstract":[{"text":"A bidirectional URL router with more type safety and less fuss. This library is built with ","type":"text"},{"type":"reference","identifier":"http:\/\/github.com\/pointfreeco\/swift-parsing","isActive":true},{"text":".","type":"text"}],"kind":"symbol","url":"\/documentation\/urlrouting"},"doc://co.pointfree.URLRouting/documentation/URLRouting/PathBuilder/PathZipVVVVVO":{"abstract":[],"fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"PathZipVVVVVO","kind":"identifier"}],"kind":"symbol","type":"topic","role":"symbol","navigatorTitle":[{"text":"PathZipVVVVVO","kind":"identifier"}],"identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/URLRouting\/PathBuilder\/PathZipVVVVVO","title":"PathBuilder.PathZipVVVVVO","url":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvvvo"},"doc://co.pointfree.URLRouting/documentation/URLRouting/PathBuilder":{"identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/URLRouting\/PathBuilder","role":"symbol","title":"PathBuilder","navigatorTitle":[{"text":"PathBuilder","kind":"identifier"}],"type":"topic","abstract":[{"text":"A custom parameter attribute that constructs path component parsers from closures. The","type":"text"},{"text":" ","type":"text"},{"text":"constructed parser runs a number of parsers against each patch component, one after the other,","type":"text"},{"text":" ","type":"text"},{"text":"and accumulates their outputs.","type":"text"}],"kind":"symbol","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"PathBuilder","kind":"identifier"}],"url":"\/documentation\/urlrouting\/pathbuilder"},"doc://co.pointfree.URLRouting/documentation/URLRouting/PathBuilder/PathZipVVVVVO/Parser-Implementations":{"abstract":[],"kind":"article","type":"topic","role":"collectionGroup","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/URLRouting\/PathBuilder\/PathZipVVVVVO\/Parser-Implementations","title":"Parser Implementations","url":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvvvo\/parser-implementations"},"doc://co.pointfree.URLRouting/documentation/URLRouting/PathBuilder/PathZipVVVVVO/match(path:)":{"type":"topic","url":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvvvo\/match(path:)","title":"match(path:)","conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"code":"Input","type":"codeVoice"},{"type":"text","text":" is "},{"code":"URLRequestData","type":"codeVoice"},{"type":"text","text":"."}]},"kind":"symbol","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/URLRouting\/PathBuilder\/PathZipVVVVVO\/match(path:)","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"match"},{"kind":"text","text":"("},{"kind":"externalParam","text":"path"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Output"}],"abstract":[]}}}